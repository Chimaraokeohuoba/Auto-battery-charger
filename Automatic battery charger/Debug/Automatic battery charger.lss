
Automatic battery charger.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001288  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00800060  00001288  0000131c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000018  00800072  00800072  0000132e  2**0
                  ALLOC
  3 .stab         00002e5c  00000000  00000000  00001330  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000832  00000000  00000000  0000418c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000120  00000000  00000000  000049c0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001606  00000000  00000000  00004ae0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000048b  00000000  00000000  000060e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009c7  00000000  00000000  00006571  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000300  00000000  00000000  00006f38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000389  00000000  00000000  00007238  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000cf0  00000000  00000000  000075c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  000082b1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	lds	r16, 0x00
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__addsf3x+0x76>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__CCP__+0x8>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <scroll_disp+0xfc>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__SREG__+0x31>
      e0:	ba a5       	lds	r27, 0x6a
      e2:	6f a5       	lds	r22, 0x6f
      e4:	f4 90       	lpm	r15, Z
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__SREG__+0x75>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <writestringXY+0x28>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__SREG__+0xbd>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <ADC_init+0x2>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	10 e0       	ldi	r17, 0x00	; 0
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	e8 e8       	ldi	r30, 0x88	; 136
     162:	f2 e1       	ldi	r31, 0x12	; 18
     164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0
     16a:	a2 37       	cpi	r26, 0x72	; 114
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
     170:	10 e0       	ldi	r17, 0x00	; 0
     172:	a2 e7       	ldi	r26, 0x72	; 114
     174:	b0 e0       	ldi	r27, 0x00	; 0
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	aa 38       	cpi	r26, 0x8A	; 138
     17c:	b1 07       	cpc	r27, r17
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <main>
     184:	0c 94 42 09 	jmp	0x1284	; 0x1284 <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <startCharging>:

 void checkVoltage(){
	voltage = ((Vref/1024)*getADC())*(Vmax/Vref); // calculate for voltage
}
void startCharging(){
	PORTD |= bit3; // set the bit3 of PORTD
     18c:	93 9a       	sbi	0x12, 3	; 18
	isCharging = 1; // set the charging variable to true
     18e:	81 e0       	ldi	r24, 0x01	; 1
     190:	90 e0       	ldi	r25, 0x00	; 0
     192:	90 93 75 00 	sts	0x0075, r25
     196:	80 93 74 00 	sts	0x0074, r24
}
     19a:	08 95       	ret

0000019c <stopCharging>:
void stopCharging(){
	PORTD &= ~bit3; // clear the bit3 of PORTD
     19c:	93 98       	cbi	0x12, 3	; 18
	isCharging = 0; // set the charging variable to false
     19e:	10 92 75 00 	sts	0x0075, r1
     1a2:	10 92 74 00 	sts	0x0074, r1
}
     1a6:	08 95       	ret

000001a8 <shutdown>:
void shutdown(){
	PORTD |= bit4; // set the bit4 of PORTD
     1a8:	94 9a       	sbi	0x12, 4	; 18
	isDown = 1;
     1aa:	81 e0       	ldi	r24, 0x01	; 1
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	90 93 73 00 	sts	0x0073, r25
     1b2:	80 93 72 00 	sts	0x0072, r24
	
}
     1b6:	08 95       	ret

000001b8 <ADC_init>:
*/


void ADC_init(){
	//call this method first to initialize the inbuilt ADC of the Avr
	ADCSRA=0x87;
     1b8:	87 e8       	ldi	r24, 0x87	; 135
     1ba:	86 b9       	out	0x06, r24	; 6
	ADMUX=0x00;
     1bc:	17 b8       	out	0x07, r1	; 7
}
     1be:	08 95       	ret

000001c0 <getADC>:

uint16_t getADC(){
	// call this method anytime you want to get the ADC value
	ADCSRA|=bit6;
     1c0:	36 9a       	sbi	0x06, 6	; 6
	while(!(ADCSRA & (1<<ADIF)));
     1c2:	34 9b       	sbis	0x06, 4	; 6
     1c4:	fe cf       	rjmp	.-4      	; 0x1c2 <getADC+0x2>
	return ADC;
     1c6:	84 b1       	in	r24, 0x04	; 4
     1c8:	95 b1       	in	r25, 0x05	; 5
     1ca:	08 95       	ret

000001cc <checkVoltage>:
					
		    
    }
}

 void checkVoltage(){
     1cc:	cf 92       	push	r12
     1ce:	df 92       	push	r13
     1d0:	ef 92       	push	r14
     1d2:	ff 92       	push	r15
     1d4:	1f 93       	push	r17
     1d6:	cf 93       	push	r28
     1d8:	df 93       	push	r29
	voltage = ((Vref/1024)*getADC())*(Vmax/Vref); // calculate for voltage
     1da:	60 91 6a 00 	lds	r22, 0x006A
     1de:	70 91 6b 00 	lds	r23, 0x006B
     1e2:	80 91 6c 00 	lds	r24, 0x006C
     1e6:	90 91 6d 00 	lds	r25, 0x006D
     1ea:	20 e0       	ldi	r18, 0x00	; 0
     1ec:	30 e0       	ldi	r19, 0x00	; 0
     1ee:	40 e8       	ldi	r20, 0x80	; 128
     1f0:	5a e3       	ldi	r21, 0x3A	; 58
     1f2:	0e 94 11 06 	call	0xc22	; 0xc22 <__mulsf3>
     1f6:	c6 2f       	mov	r28, r22
     1f8:	c7 2e       	mov	r12, r23
     1fa:	d8 2f       	mov	r29, r24
     1fc:	19 2f       	mov	r17, r25
     1fe:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <getADC>
     202:	bc 01       	movw	r22, r24
     204:	80 e0       	ldi	r24, 0x00	; 0
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	0e 94 5b 05 	call	0xab6	; 0xab6 <__floatunsisf>
     20c:	9b 01       	movw	r18, r22
     20e:	ac 01       	movw	r20, r24
     210:	8c 2f       	mov	r24, r28
     212:	9c 2d       	mov	r25, r12
     214:	ad 2f       	mov	r26, r29
     216:	b1 2f       	mov	r27, r17
     218:	bc 01       	movw	r22, r24
     21a:	cd 01       	movw	r24, r26
     21c:	0e 94 11 06 	call	0xc22	; 0xc22 <__mulsf3>
     220:	6b 01       	movw	r12, r22
     222:	7c 01       	movw	r14, r24
     224:	60 91 6e 00 	lds	r22, 0x006E
     228:	70 91 6f 00 	lds	r23, 0x006F
     22c:	80 91 70 00 	lds	r24, 0x0070
     230:	90 91 71 00 	lds	r25, 0x0071
     234:	20 91 6a 00 	lds	r18, 0x006A
     238:	30 91 6b 00 	lds	r19, 0x006B
     23c:	40 91 6c 00 	lds	r20, 0x006C
     240:	50 91 6d 00 	lds	r21, 0x006D
     244:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <__divsf3>
     248:	9b 01       	movw	r18, r22
     24a:	ac 01       	movw	r20, r24
     24c:	c7 01       	movw	r24, r14
     24e:	b6 01       	movw	r22, r12
     250:	0e 94 11 06 	call	0xc22	; 0xc22 <__mulsf3>
     254:	dc 01       	movw	r26, r24
     256:	cb 01       	movw	r24, r22
     258:	80 93 7c 00 	sts	0x007C, r24
     25c:	90 93 7d 00 	sts	0x007D, r25
     260:	a0 93 7e 00 	sts	0x007E, r26
     264:	b0 93 7f 00 	sts	0x007F, r27
}
     268:	df 91       	pop	r29
     26a:	cf 91       	pop	r28
     26c:	1f 91       	pop	r17
     26e:	ff 90       	pop	r15
     270:	ef 90       	pop	r14
     272:	df 90       	pop	r13
     274:	cf 90       	pop	r12
     276:	08 95       	ret

00000278 <write_data>:
void lcd_scroll(unsigned char character);
void scroll_msg(unsigned char msg[]);
void writestringXY(int row, int col, unsigned char msg[]);
void scroll_disp();
void write_data(unsigned char a){
	lcd_data=a;
     278:	88 bb       	out	0x18, r24	; 24
	PORTC|=bit7;
     27a:	af 9a       	sbi	0x15, 7	; 21
	PORTC|=bit6;
     27c:	ae 9a       	sbi	0x15, 6	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     27e:	89 ef       	ldi	r24, 0xF9	; 249
     280:	90 e0       	ldi	r25, 0x00	; 0
     282:	01 97       	sbiw	r24, 0x01	; 1
     284:	f1 f7       	brne	.-4      	; 0x282 <write_data+0xa>
     286:	00 c0       	rjmp	.+0      	; 0x288 <write_data+0x10>
     288:	00 00       	nop
	_delay_ms(1);
	PORTC&=~bit6;
     28a:	ae 98       	cbi	0x15, 6	; 21
	return;
}void write_cmd(unsigned char b){
     28c:	08 95       	ret

0000028e <write_cmd>:
	lcd_data = b;
     28e:	88 bb       	out	0x18, r24	; 24
	PORTC&=~bit7;
     290:	af 98       	cbi	0x15, 7	; 21
	PORTC|=bit6;
     292:	ae 9a       	sbi	0x15, 6	; 21
     294:	89 ef       	ldi	r24, 0xF9	; 249
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	01 97       	sbiw	r24, 0x01	; 1
     29a:	f1 f7       	brne	.-4      	; 0x298 <write_cmd+0xa>
     29c:	00 c0       	rjmp	.+0      	; 0x29e <write_cmd+0x10>
     29e:	00 00       	nop
	_delay_ms(1);
	PORTC&=~bit6;
     2a0:	ae 98       	cbi	0x15, 6	; 21
	return;
}
     2a2:	08 95       	ret

000002a4 <BCD_To_ASCII>:

void BCD_To_ASCII(unsigned char bcd_value, char * p_ascii_text)
{
     2a4:	fb 01       	movw	r30, r22
	//--------------------------------------------------
	// BCD contains digits 0 .. 9 in the binary nibbles
	//--------------------------------------------------
	*p_ascii_text++ = (bcd_value >> 4)  + '0';
     2a6:	98 2f       	mov	r25, r24
     2a8:	92 95       	swap	r25
     2aa:	9f 70       	andi	r25, 0x0F	; 15
     2ac:	90 5d       	subi	r25, 0xD0	; 208
     2ae:	90 83       	st	Z, r25
	*p_ascii_text++ = (bcd_value & 0x0f) + '0';
     2b0:	8f 70       	andi	r24, 0x0F	; 15
     2b2:	80 5d       	subi	r24, 0xD0	; 208
     2b4:	81 83       	std	Z+1, r24	; 0x01
	*p_ascii_text = '\0';
     2b6:	12 82       	std	Z+2, r1	; 0x02
	return;
}
     2b8:	08 95       	ret

000002ba <writestring>:

void writestring(unsigned char msg[]){
     2ba:	0f 93       	push	r16
     2bc:	1f 93       	push	r17
     2be:	cf 93       	push	r28
     2c0:	df 93       	push	r29
	unsigned char z,v;
	v=strlen(msg);
     2c2:	e8 2f       	mov	r30, r24
     2c4:	f9 2f       	mov	r31, r25
     2c6:	df 01       	movw	r26, r30
     2c8:	0d 90       	ld	r0, X+
     2ca:	00 20       	and	r0, r0
     2cc:	e9 f7       	brne	.-6      	; 0x2c8 <writestring+0xe>
     2ce:	11 97       	sbiw	r26, 0x01	; 1
     2d0:	0a 2f       	mov	r16, r26
     2d2:	08 1b       	sub	r16, r24
	for(z=0;z<v;z++){
     2d4:	49 f0       	breq	.+18     	; 0x2e8 <writestring+0x2e>
     2d6:	c8 2f       	mov	r28, r24
     2d8:	d9 2f       	mov	r29, r25
     2da:	10 e0       	ldi	r17, 0x00	; 0
		write_data(msg[z]);
     2dc:	89 91       	ld	r24, Y+
     2de:	0e 94 3c 01 	call	0x278	; 0x278 <write_data>
}

void writestring(unsigned char msg[]){
	unsigned char z,v;
	v=strlen(msg);
	for(z=0;z<v;z++){
     2e2:	1f 5f       	subi	r17, 0xFF	; 255
     2e4:	10 17       	cp	r17, r16
     2e6:	d0 f3       	brcs	.-12     	; 0x2dc <writestring+0x22>
		write_data(msg[z]);
	}
}
     2e8:	df 91       	pop	r29
     2ea:	cf 91       	pop	r28
     2ec:	1f 91       	pop	r17
     2ee:	0f 91       	pop	r16
     2f0:	08 95       	ret

000002f2 <writeint>:

void writeint(int msg){
     2f2:	cf 93       	push	r28
     2f4:	df 93       	push	r29
     2f6:	cd b7       	in	r28, 0x3d	; 61
     2f8:	de b7       	in	r29, 0x3e	; 62
     2fa:	27 97       	sbiw	r28, 0x07	; 7
     2fc:	0f b6       	in	r0, 0x3f	; 63
     2fe:	f8 94       	cli
     300:	de bf       	out	0x3e, r29	; 62
     302:	0f be       	out	0x3f, r0	; 63
     304:	cd bf       	out	0x3d, r28	; 61
	char intstr[7];
	itoa(msg,intstr,10);
     306:	be 01       	movw	r22, r28
     308:	6f 5f       	subi	r22, 0xFF	; 255
     30a:	7f 4f       	sbci	r23, 0xFF	; 255
     30c:	4a e0       	ldi	r20, 0x0A	; 10
     30e:	50 e0       	ldi	r21, 0x00	; 0
     310:	0e 94 96 06 	call	0xd2c	; 0xd2c <itoa>
	writestring(intstr);
     314:	ce 01       	movw	r24, r28
     316:	01 96       	adiw	r24, 0x01	; 1
     318:	0e 94 5d 01 	call	0x2ba	; 0x2ba <writestring>
}
     31c:	27 96       	adiw	r28, 0x07	; 7
     31e:	0f b6       	in	r0, 0x3f	; 63
     320:	f8 94       	cli
     322:	de bf       	out	0x3e, r29	; 62
     324:	0f be       	out	0x3f, r0	; 63
     326:	cd bf       	out	0x3d, r28	; 61
     328:	df 91       	pop	r29
     32a:	cf 91       	pop	r28
     32c:	08 95       	ret

0000032e <writedouble>:

void writedouble(double msg,int width, int precision){
     32e:	0f 93       	push	r16
     330:	1f 93       	push	r17
     332:	cf 93       	push	r28
     334:	df 93       	push	r29
     336:	cd b7       	in	r28, 0x3d	; 61
     338:	de b7       	in	r29, 0x3e	; 62
     33a:	27 97       	sbiw	r28, 0x07	; 7
     33c:	0f b6       	in	r0, 0x3f	; 63
     33e:	f8 94       	cli
     340:	de bf       	out	0x3e, r29	; 62
     342:	0f be       	out	0x3f, r0	; 63
     344:	cd bf       	out	0x3d, r28	; 61
	char doublestr[7];
	dtostrf(msg, width, precision, doublestr);
     346:	8e 01       	movw	r16, r28
     348:	0f 5f       	subi	r16, 0xFF	; 255
     34a:	1f 4f       	sbci	r17, 0xFF	; 255
     34c:	0e 94 74 06 	call	0xce8	; 0xce8 <dtostrf>
	writestring(doublestr);
     350:	c8 01       	movw	r24, r16
     352:	0e 94 5d 01 	call	0x2ba	; 0x2ba <writestring>
}
     356:	27 96       	adiw	r28, 0x07	; 7
     358:	0f b6       	in	r0, 0x3f	; 63
     35a:	f8 94       	cli
     35c:	de bf       	out	0x3e, r29	; 62
     35e:	0f be       	out	0x3f, r0	; 63
     360:	cd bf       	out	0x3d, r28	; 61
     362:	df 91       	pop	r29
     364:	cf 91       	pop	r28
     366:	1f 91       	pop	r17
     368:	0f 91       	pop	r16
     36a:	08 95       	ret

0000036c <writebcd>:

void writebcd(int bcd){
     36c:	cf 93       	push	r28
     36e:	df 93       	push	r29
     370:	cd b7       	in	r28, 0x3d	; 61
     372:	de b7       	in	r29, 0x3e	; 62
     374:	2a 97       	sbiw	r28, 0x0a	; 10
     376:	0f b6       	in	r0, 0x3f	; 63
     378:	f8 94       	cli
     37a:	de bf       	out	0x3e, r29	; 62
     37c:	0f be       	out	0x3f, r0	; 63
     37e:	cd bf       	out	0x3d, r28	; 61
	char bcdstr[10];
	BCD_To_ASCII(bcd, bcdstr);
     380:	be 01       	movw	r22, r28
     382:	6f 5f       	subi	r22, 0xFF	; 255
     384:	7f 4f       	sbci	r23, 0xFF	; 255
     386:	0e 94 52 01 	call	0x2a4	; 0x2a4 <BCD_To_ASCII>
	writestring(bcdstr);
     38a:	ce 01       	movw	r24, r28
     38c:	01 96       	adiw	r24, 0x01	; 1
     38e:	0e 94 5d 01 	call	0x2ba	; 0x2ba <writestring>
}
     392:	2a 96       	adiw	r28, 0x0a	; 10
     394:	0f b6       	in	r0, 0x3f	; 63
     396:	f8 94       	cli
     398:	de bf       	out	0x3e, r29	; 62
     39a:	0f be       	out	0x3f, r0	; 63
     39c:	cd bf       	out	0x3d, r28	; 61
     39e:	df 91       	pop	r29
     3a0:	cf 91       	pop	r28
     3a2:	08 95       	ret

000003a4 <writestringXY>:

void writestringXY(int row, int col, unsigned char msg[]){
     3a4:	ff 92       	push	r15
     3a6:	0f 93       	push	r16
     3a8:	1f 93       	push	r17
     3aa:	cf 93       	push	r28
     3ac:	df 93       	push	r29
     3ae:	14 2f       	mov	r17, r20
     3b0:	f5 2e       	mov	r15, r21
	int position;
	switch(row){
     3b2:	83 30       	cpi	r24, 0x03	; 3
     3b4:	91 05       	cpc	r25, r1
     3b6:	49 f0       	breq	.+18     	; 0x3ca <writestringXY+0x26>
     3b8:	84 30       	cpi	r24, 0x04	; 4
     3ba:	91 05       	cpc	r25, r1
     3bc:	49 f0       	breq	.+18     	; 0x3d0 <writestringXY+0x2c>
     3be:	82 30       	cpi	r24, 0x02	; 2
     3c0:	91 05       	cpc	r25, r1
     3c2:	49 f0       	breq	.+18     	; 0x3d6 <writestringXY+0x32>
		case 1:
		position = 0x80;
     3c4:	20 e8       	ldi	r18, 0x80	; 128
     3c6:	30 e0       	ldi	r19, 0x00	; 0
     3c8:	08 c0       	rjmp	.+16     	; 0x3da <writestringXY+0x36>
		break;
		case 2:
		position = 0xC0;
		break;
		case 3:
		position = 0x90;
     3ca:	20 e9       	ldi	r18, 0x90	; 144
     3cc:	30 e0       	ldi	r19, 0x00	; 0
		break;
     3ce:	05 c0       	rjmp	.+10     	; 0x3da <writestringXY+0x36>
		case 4:
		position = 0xD0;
     3d0:	20 ed       	ldi	r18, 0xD0	; 208
     3d2:	30 e0       	ldi	r19, 0x00	; 0
		break;
     3d4:	02 c0       	rjmp	.+4      	; 0x3da <writestringXY+0x36>
	switch(row){
		case 1:
		position = 0x80;
		break;
		case 2:
		position = 0xC0;
     3d6:	20 ec       	ldi	r18, 0xC0	; 192
     3d8:	30 e0       	ldi	r19, 0x00	; 0
		position = 0xD0;
		break;
		default:
		position = 0x80;
	}
	position += --col;
     3da:	cb 01       	movw	r24, r22
     3dc:	01 97       	sbiw	r24, 0x01	; 1
	write_cmd(position);
     3de:	82 0f       	add	r24, r18
     3e0:	0e 94 47 01 	call	0x28e	; 0x28e <write_cmd>
	unsigned char z,v;
	v=strlen(msg);
     3e4:	e1 2f       	mov	r30, r17
     3e6:	ff 2d       	mov	r31, r15
     3e8:	df 01       	movw	r26, r30
     3ea:	0d 90       	ld	r0, X+
     3ec:	00 20       	and	r0, r0
     3ee:	e9 f7       	brne	.-6      	; 0x3ea <writestringXY+0x46>
     3f0:	11 97       	sbiw	r26, 0x01	; 1
     3f2:	0a 2f       	mov	r16, r26
     3f4:	01 1b       	sub	r16, r17
	for(z=0;z<v;z++){
     3f6:	49 f0       	breq	.+18     	; 0x40a <writestringXY+0x66>
     3f8:	c1 2f       	mov	r28, r17
     3fa:	df 2d       	mov	r29, r15
     3fc:	10 e0       	ldi	r17, 0x00	; 0
		write_data(msg[z]);
     3fe:	89 91       	ld	r24, Y+
     400:	0e 94 3c 01 	call	0x278	; 0x278 <write_data>
	}
	position += --col;
	write_cmd(position);
	unsigned char z,v;
	v=strlen(msg);
	for(z=0;z<v;z++){
     404:	1f 5f       	subi	r17, 0xFF	; 255
     406:	10 17       	cp	r17, r16
     408:	d0 f3       	brcs	.-12     	; 0x3fe <writestringXY+0x5a>
		write_data(msg[z]);
	}
}
     40a:	df 91       	pop	r29
     40c:	cf 91       	pop	r28
     40e:	1f 91       	pop	r17
     410:	0f 91       	pop	r16
     412:	ff 90       	pop	r15
     414:	08 95       	ret

00000416 <writeintXY>:

void writeintXY(int row, int col, int msg){
     416:	cf 93       	push	r28
     418:	df 93       	push	r29
     41a:	ea 01       	movw	r28, r20
	int position;
	switch(row){
     41c:	83 30       	cpi	r24, 0x03	; 3
     41e:	91 05       	cpc	r25, r1
     420:	49 f0       	breq	.+18     	; 0x434 <writeintXY+0x1e>
     422:	84 30       	cpi	r24, 0x04	; 4
     424:	91 05       	cpc	r25, r1
     426:	49 f0       	breq	.+18     	; 0x43a <writeintXY+0x24>
     428:	82 30       	cpi	r24, 0x02	; 2
     42a:	91 05       	cpc	r25, r1
     42c:	49 f0       	breq	.+18     	; 0x440 <writeintXY+0x2a>
		case 1:
		position = 0x80;
     42e:	20 e8       	ldi	r18, 0x80	; 128
     430:	30 e0       	ldi	r19, 0x00	; 0
     432:	08 c0       	rjmp	.+16     	; 0x444 <writeintXY+0x2e>
		break;
		case 2:
		position = 0xC0;
		break;
		case 3:
		position = 0x90;
     434:	20 e9       	ldi	r18, 0x90	; 144
     436:	30 e0       	ldi	r19, 0x00	; 0
		break;
     438:	05 c0       	rjmp	.+10     	; 0x444 <writeintXY+0x2e>
		case 4:
		position = 0xD0;
     43a:	20 ed       	ldi	r18, 0xD0	; 208
     43c:	30 e0       	ldi	r19, 0x00	; 0
		break;
     43e:	02 c0       	rjmp	.+4      	; 0x444 <writeintXY+0x2e>
	switch(row){
		case 1:
		position = 0x80;
		break;
		case 2:
		position = 0xC0;
     440:	20 ec       	ldi	r18, 0xC0	; 192
     442:	30 e0       	ldi	r19, 0x00	; 0
		position = 0xD0;
		break;
		default:
		position = 0x80;
	}
	position += --col;
     444:	cb 01       	movw	r24, r22
     446:	01 97       	sbiw	r24, 0x01	; 1
	write_cmd(position);
     448:	82 0f       	add	r24, r18
     44a:	0e 94 47 01 	call	0x28e	; 0x28e <write_cmd>
	writeint(msg);
     44e:	ce 01       	movw	r24, r28
     450:	0e 94 79 01 	call	0x2f2	; 0x2f2 <writeint>
}
     454:	df 91       	pop	r29
     456:	cf 91       	pop	r28
     458:	08 95       	ret

0000045a <writedoubleXY>:


void writedoubleXY(int row, int col, double msg, int width, int precision){
     45a:	8f 92       	push	r8
     45c:	9f 92       	push	r9
     45e:	af 92       	push	r10
     460:	bf 92       	push	r11
     462:	ef 92       	push	r14
     464:	ff 92       	push	r15
     466:	0f 93       	push	r16
     468:	1f 93       	push	r17
     46a:	49 01       	movw	r8, r18
     46c:	5a 01       	movw	r10, r20
	int position;
	switch(row){
     46e:	83 30       	cpi	r24, 0x03	; 3
     470:	91 05       	cpc	r25, r1
     472:	49 f0       	breq	.+18     	; 0x486 <writedoubleXY+0x2c>
     474:	84 30       	cpi	r24, 0x04	; 4
     476:	91 05       	cpc	r25, r1
     478:	49 f0       	breq	.+18     	; 0x48c <writedoubleXY+0x32>
     47a:	82 30       	cpi	r24, 0x02	; 2
     47c:	91 05       	cpc	r25, r1
     47e:	49 f0       	breq	.+18     	; 0x492 <writedoubleXY+0x38>
		case 1:
		position = 0x80;
     480:	20 e8       	ldi	r18, 0x80	; 128
     482:	30 e0       	ldi	r19, 0x00	; 0
     484:	08 c0       	rjmp	.+16     	; 0x496 <writedoubleXY+0x3c>
		break;
		case 2:
		position = 0xC0;
		break;
		case 3:
		position = 0x90;
     486:	20 e9       	ldi	r18, 0x90	; 144
     488:	30 e0       	ldi	r19, 0x00	; 0
		break;
     48a:	05 c0       	rjmp	.+10     	; 0x496 <writedoubleXY+0x3c>
		case 4:
		position = 0xD0;
     48c:	20 ed       	ldi	r18, 0xD0	; 208
     48e:	30 e0       	ldi	r19, 0x00	; 0
		break;
     490:	02 c0       	rjmp	.+4      	; 0x496 <writedoubleXY+0x3c>
	switch(row){
		case 1:
		position = 0x80;
		break;
		case 2:
		position = 0xC0;
     492:	20 ec       	ldi	r18, 0xC0	; 192
     494:	30 e0       	ldi	r19, 0x00	; 0
		position = 0xD0;
		break;
		default:
		position = 0x80;
	}
	position += --col;
     496:	cb 01       	movw	r24, r22
     498:	01 97       	sbiw	r24, 0x01	; 1
	write_cmd(position);
     49a:	82 0f       	add	r24, r18
     49c:	0e 94 47 01 	call	0x28e	; 0x28e <write_cmd>
	writedouble(msg, width, precision);
     4a0:	c5 01       	movw	r24, r10
     4a2:	b4 01       	movw	r22, r8
     4a4:	a8 01       	movw	r20, r16
     4a6:	97 01       	movw	r18, r14
     4a8:	0e 94 97 01 	call	0x32e	; 0x32e <writedouble>
}
     4ac:	1f 91       	pop	r17
     4ae:	0f 91       	pop	r16
     4b0:	ff 90       	pop	r15
     4b2:	ef 90       	pop	r14
     4b4:	bf 90       	pop	r11
     4b6:	af 90       	pop	r10
     4b8:	9f 90       	pop	r9
     4ba:	8f 90       	pop	r8
     4bc:	08 95       	ret

000004be <writebcdXY>:


void writebcdXY(int row, int col, int bcd){
     4be:	cf 93       	push	r28
     4c0:	df 93       	push	r29
     4c2:	ea 01       	movw	r28, r20
	int position;
	switch(row){
     4c4:	83 30       	cpi	r24, 0x03	; 3
     4c6:	91 05       	cpc	r25, r1
     4c8:	49 f0       	breq	.+18     	; 0x4dc <writebcdXY+0x1e>
     4ca:	84 30       	cpi	r24, 0x04	; 4
     4cc:	91 05       	cpc	r25, r1
     4ce:	49 f0       	breq	.+18     	; 0x4e2 <writebcdXY+0x24>
     4d0:	82 30       	cpi	r24, 0x02	; 2
     4d2:	91 05       	cpc	r25, r1
     4d4:	49 f0       	breq	.+18     	; 0x4e8 <writebcdXY+0x2a>
		case 1:
		position = 0x80;
     4d6:	20 e8       	ldi	r18, 0x80	; 128
     4d8:	30 e0       	ldi	r19, 0x00	; 0
     4da:	08 c0       	rjmp	.+16     	; 0x4ec <writebcdXY+0x2e>
		break;
		case 2:
		position = 0xC0;
		break;
		case 3:
		position = 0x90;
     4dc:	20 e9       	ldi	r18, 0x90	; 144
     4de:	30 e0       	ldi	r19, 0x00	; 0
		break;
     4e0:	05 c0       	rjmp	.+10     	; 0x4ec <writebcdXY+0x2e>
		case 4:
		position = 0xD0;
     4e2:	20 ed       	ldi	r18, 0xD0	; 208
     4e4:	30 e0       	ldi	r19, 0x00	; 0
		break;
     4e6:	02 c0       	rjmp	.+4      	; 0x4ec <writebcdXY+0x2e>
	switch(row){
		case 1:
		position = 0x80;
		break;
		case 2:
		position = 0xC0;
     4e8:	20 ec       	ldi	r18, 0xC0	; 192
     4ea:	30 e0       	ldi	r19, 0x00	; 0
		position = 0xD0;
		break;
		default:
		position = 0x80;
	}
	position += --col;
     4ec:	cb 01       	movw	r24, r22
     4ee:	01 97       	sbiw	r24, 0x01	; 1
	write_cmd(position);
     4f0:	82 0f       	add	r24, r18
     4f2:	0e 94 47 01 	call	0x28e	; 0x28e <write_cmd>
	writebcd(bcd);
     4f6:	ce 01       	movw	r24, r28
     4f8:	0e 94 b6 01 	call	0x36c	; 0x36c <writebcd>
}
     4fc:	df 91       	pop	r29
     4fe:	cf 91       	pop	r28
     500:	08 95       	ret

00000502 <blinkCursor>:


void blinkCursor(int row, int col){
	int position;
	switch(row){
     502:	83 30       	cpi	r24, 0x03	; 3
     504:	91 05       	cpc	r25, r1
     506:	49 f0       	breq	.+18     	; 0x51a <blinkCursor+0x18>
     508:	84 30       	cpi	r24, 0x04	; 4
     50a:	91 05       	cpc	r25, r1
     50c:	49 f0       	breq	.+18     	; 0x520 <blinkCursor+0x1e>
     50e:	82 30       	cpi	r24, 0x02	; 2
     510:	91 05       	cpc	r25, r1
     512:	49 f0       	breq	.+18     	; 0x526 <blinkCursor+0x24>
		case 1:
		position = 0x80;
     514:	20 e8       	ldi	r18, 0x80	; 128
     516:	30 e0       	ldi	r19, 0x00	; 0
     518:	08 c0       	rjmp	.+16     	; 0x52a <blinkCursor+0x28>
		break;
		case 2:
		position = 0xC0;
		break;
		case 3:
		position = 0x90;
     51a:	20 e9       	ldi	r18, 0x90	; 144
     51c:	30 e0       	ldi	r19, 0x00	; 0
		break;
     51e:	05 c0       	rjmp	.+10     	; 0x52a <blinkCursor+0x28>
		case 4:
		position = 0xD0;
     520:	20 ed       	ldi	r18, 0xD0	; 208
     522:	30 e0       	ldi	r19, 0x00	; 0
		break;
     524:	02 c0       	rjmp	.+4      	; 0x52a <blinkCursor+0x28>
	switch(row){
		case 1:
		position = 0x80;
		break;
		case 2:
		position = 0xC0;
     526:	20 ec       	ldi	r18, 0xC0	; 192
     528:	30 e0       	ldi	r19, 0x00	; 0
		position = 0xD0;
		break;
		default:
		position = 0x80;
	}
	position += --col;
     52a:	cb 01       	movw	r24, r22
     52c:	01 97       	sbiw	r24, 0x01	; 1
	write_cmd(position);
     52e:	82 0f       	add	r24, r18
     530:	0e 94 47 01 	call	0x28e	; 0x28e <write_cmd>
	write_cmd(0x0F);
     534:	8f e0       	ldi	r24, 0x0F	; 15
     536:	0e 94 47 01 	call	0x28e	; 0x28e <write_cmd>
}
     53a:	08 95       	ret

0000053c <init_lcd>:

void init_lcd(){
	write_cmd(0x38);
     53c:	88 e3       	ldi	r24, 0x38	; 56
     53e:	0e 94 47 01 	call	0x28e	; 0x28e <write_cmd>
	write_cmd(0x80);
     542:	80 e8       	ldi	r24, 0x80	; 128
     544:	0e 94 47 01 	call	0x28e	; 0x28e <write_cmd>
	write_cmd(0x0C);
     548:	8c e0       	ldi	r24, 0x0C	; 12
     54a:	0e 94 47 01 	call	0x28e	; 0x28e <write_cmd>
}
     54e:	08 95       	ret

00000550 <clearsc>:
void clearsc(){
	write_cmd(0x01);
     550:	81 e0       	ldi	r24, 0x01	; 1
     552:	0e 94 47 01 	call	0x28e	; 0x28e <write_cmd>
}
     556:	08 95       	ret

00000558 <int_lcd_scroll>:
void int_lcd_scroll(){
	aa = " ";
     558:	80 e6       	ldi	r24, 0x60	; 96
     55a:	90 e0       	ldi	r25, 0x00	; 0
     55c:	80 93 80 00 	sts	0x0080, r24
	ab = " ";
     560:	80 93 77 00 	sts	0x0077, r24
	ac = " ";
     564:	80 93 85 00 	sts	0x0085, r24
	ad = " ";
     568:	80 93 76 00 	sts	0x0076, r24
	ae = " ";
     56c:	80 93 88 00 	sts	0x0088, r24
	af = " ";
     570:	80 93 82 00 	sts	0x0082, r24
	ag = " ";
     574:	80 93 87 00 	sts	0x0087, r24
	ah = " ";
     578:	80 93 79 00 	sts	0x0079, r24
	ai = " ";
     57c:	80 93 81 00 	sts	0x0081, r24
	aj = " ";
     580:	80 93 78 00 	sts	0x0078, r24
	ak = " ";
     584:	80 93 7a 00 	sts	0x007A, r24
	al = " ";
     588:	80 93 84 00 	sts	0x0084, r24
	am = " ";
     58c:	80 93 89 00 	sts	0x0089, r24
	an = " ";
     590:	80 93 83 00 	sts	0x0083, r24
	ao = " ";
     594:	80 93 86 00 	sts	0x0086, r24
	ap = " ";
     598:	80 93 7b 00 	sts	0x007B, r24
}
     59c:	08 95       	ret

0000059e <scroll_disp>:
void scroll_disp(){
	write_data(aa);
     59e:	80 91 80 00 	lds	r24, 0x0080
     5a2:	0e 94 3c 01 	call	0x278	; 0x278 <write_data>
     5a6:	83 ec       	ldi	r24, 0xC3	; 195
     5a8:	99 e0       	ldi	r25, 0x09	; 9
     5aa:	01 97       	sbiw	r24, 0x01	; 1
     5ac:	f1 f7       	brne	.-4      	; 0x5aa <scroll_disp+0xc>
     5ae:	00 c0       	rjmp	.+0      	; 0x5b0 <scroll_disp+0x12>
     5b0:	00 00       	nop
	_delay_ms(10);
	write_data(ab);
     5b2:	80 91 77 00 	lds	r24, 0x0077
     5b6:	0e 94 3c 01 	call	0x278	; 0x278 <write_data>
     5ba:	83 ec       	ldi	r24, 0xC3	; 195
     5bc:	99 e0       	ldi	r25, 0x09	; 9
     5be:	01 97       	sbiw	r24, 0x01	; 1
     5c0:	f1 f7       	brne	.-4      	; 0x5be <scroll_disp+0x20>
     5c2:	00 c0       	rjmp	.+0      	; 0x5c4 <scroll_disp+0x26>
     5c4:	00 00       	nop
	_delay_ms(10);
	write_data(ac);
     5c6:	80 91 85 00 	lds	r24, 0x0085
     5ca:	0e 94 3c 01 	call	0x278	; 0x278 <write_data>
     5ce:	83 ec       	ldi	r24, 0xC3	; 195
     5d0:	99 e0       	ldi	r25, 0x09	; 9
     5d2:	01 97       	sbiw	r24, 0x01	; 1
     5d4:	f1 f7       	brne	.-4      	; 0x5d2 <scroll_disp+0x34>
     5d6:	00 c0       	rjmp	.+0      	; 0x5d8 <scroll_disp+0x3a>
     5d8:	00 00       	nop
	_delay_ms(10);
	write_data(ad);
     5da:	80 91 76 00 	lds	r24, 0x0076
     5de:	0e 94 3c 01 	call	0x278	; 0x278 <write_data>
     5e2:	83 ec       	ldi	r24, 0xC3	; 195
     5e4:	99 e0       	ldi	r25, 0x09	; 9
     5e6:	01 97       	sbiw	r24, 0x01	; 1
     5e8:	f1 f7       	brne	.-4      	; 0x5e6 <scroll_disp+0x48>
     5ea:	00 c0       	rjmp	.+0      	; 0x5ec <scroll_disp+0x4e>
     5ec:	00 00       	nop
	_delay_ms(10);
	write_data(ae);
     5ee:	80 91 88 00 	lds	r24, 0x0088
     5f2:	0e 94 3c 01 	call	0x278	; 0x278 <write_data>
     5f6:	83 ec       	ldi	r24, 0xC3	; 195
     5f8:	99 e0       	ldi	r25, 0x09	; 9
     5fa:	01 97       	sbiw	r24, 0x01	; 1
     5fc:	f1 f7       	brne	.-4      	; 0x5fa <scroll_disp+0x5c>
     5fe:	00 c0       	rjmp	.+0      	; 0x600 <scroll_disp+0x62>
     600:	00 00       	nop
	_delay_ms(10);
	write_data(af);
     602:	80 91 82 00 	lds	r24, 0x0082
     606:	0e 94 3c 01 	call	0x278	; 0x278 <write_data>
     60a:	83 ec       	ldi	r24, 0xC3	; 195
     60c:	99 e0       	ldi	r25, 0x09	; 9
     60e:	01 97       	sbiw	r24, 0x01	; 1
     610:	f1 f7       	brne	.-4      	; 0x60e <scroll_disp+0x70>
     612:	00 c0       	rjmp	.+0      	; 0x614 <scroll_disp+0x76>
     614:	00 00       	nop
	_delay_ms(10);
	write_data(ag);
     616:	80 91 87 00 	lds	r24, 0x0087
     61a:	0e 94 3c 01 	call	0x278	; 0x278 <write_data>
     61e:	83 ec       	ldi	r24, 0xC3	; 195
     620:	99 e0       	ldi	r25, 0x09	; 9
     622:	01 97       	sbiw	r24, 0x01	; 1
     624:	f1 f7       	brne	.-4      	; 0x622 <scroll_disp+0x84>
     626:	00 c0       	rjmp	.+0      	; 0x628 <scroll_disp+0x8a>
     628:	00 00       	nop
	_delay_ms(10);
	write_data(ah);
     62a:	80 91 79 00 	lds	r24, 0x0079
     62e:	0e 94 3c 01 	call	0x278	; 0x278 <write_data>
     632:	83 ec       	ldi	r24, 0xC3	; 195
     634:	99 e0       	ldi	r25, 0x09	; 9
     636:	01 97       	sbiw	r24, 0x01	; 1
     638:	f1 f7       	brne	.-4      	; 0x636 <scroll_disp+0x98>
     63a:	00 c0       	rjmp	.+0      	; 0x63c <scroll_disp+0x9e>
     63c:	00 00       	nop
	_delay_ms(10);
	write_data(ai);
     63e:	80 91 81 00 	lds	r24, 0x0081
     642:	0e 94 3c 01 	call	0x278	; 0x278 <write_data>
     646:	83 ec       	ldi	r24, 0xC3	; 195
     648:	99 e0       	ldi	r25, 0x09	; 9
     64a:	01 97       	sbiw	r24, 0x01	; 1
     64c:	f1 f7       	brne	.-4      	; 0x64a <scroll_disp+0xac>
     64e:	00 c0       	rjmp	.+0      	; 0x650 <scroll_disp+0xb2>
     650:	00 00       	nop
	_delay_ms(10);
	write_data(aj);
     652:	80 91 78 00 	lds	r24, 0x0078
     656:	0e 94 3c 01 	call	0x278	; 0x278 <write_data>
     65a:	83 ec       	ldi	r24, 0xC3	; 195
     65c:	99 e0       	ldi	r25, 0x09	; 9
     65e:	01 97       	sbiw	r24, 0x01	; 1
     660:	f1 f7       	brne	.-4      	; 0x65e <scroll_disp+0xc0>
     662:	00 c0       	rjmp	.+0      	; 0x664 <scroll_disp+0xc6>
     664:	00 00       	nop
	_delay_ms(10);
	write_data(ak);
     666:	80 91 7a 00 	lds	r24, 0x007A
     66a:	0e 94 3c 01 	call	0x278	; 0x278 <write_data>
     66e:	83 ec       	ldi	r24, 0xC3	; 195
     670:	99 e0       	ldi	r25, 0x09	; 9
     672:	01 97       	sbiw	r24, 0x01	; 1
     674:	f1 f7       	brne	.-4      	; 0x672 <scroll_disp+0xd4>
     676:	00 c0       	rjmp	.+0      	; 0x678 <scroll_disp+0xda>
     678:	00 00       	nop
	_delay_ms(10);
	write_data(al);
     67a:	80 91 84 00 	lds	r24, 0x0084
     67e:	0e 94 3c 01 	call	0x278	; 0x278 <write_data>
     682:	83 ec       	ldi	r24, 0xC3	; 195
     684:	99 e0       	ldi	r25, 0x09	; 9
     686:	01 97       	sbiw	r24, 0x01	; 1
     688:	f1 f7       	brne	.-4      	; 0x686 <scroll_disp+0xe8>
     68a:	00 c0       	rjmp	.+0      	; 0x68c <scroll_disp+0xee>
     68c:	00 00       	nop
	_delay_ms(10);
	write_data(am);
     68e:	80 91 89 00 	lds	r24, 0x0089
     692:	0e 94 3c 01 	call	0x278	; 0x278 <write_data>
     696:	83 ec       	ldi	r24, 0xC3	; 195
     698:	99 e0       	ldi	r25, 0x09	; 9
     69a:	01 97       	sbiw	r24, 0x01	; 1
     69c:	f1 f7       	brne	.-4      	; 0x69a <scroll_disp+0xfc>
     69e:	00 c0       	rjmp	.+0      	; 0x6a0 <scroll_disp+0x102>
     6a0:	00 00       	nop
	_delay_ms(10);
	write_data(an);
     6a2:	80 91 83 00 	lds	r24, 0x0083
     6a6:	0e 94 3c 01 	call	0x278	; 0x278 <write_data>
     6aa:	83 ec       	ldi	r24, 0xC3	; 195
     6ac:	99 e0       	ldi	r25, 0x09	; 9
     6ae:	01 97       	sbiw	r24, 0x01	; 1
     6b0:	f1 f7       	brne	.-4      	; 0x6ae <scroll_disp+0x110>
     6b2:	00 c0       	rjmp	.+0      	; 0x6b4 <scroll_disp+0x116>
     6b4:	00 00       	nop
	_delay_ms(10);
	write_data(ao);
     6b6:	80 91 86 00 	lds	r24, 0x0086
     6ba:	0e 94 3c 01 	call	0x278	; 0x278 <write_data>
     6be:	83 ec       	ldi	r24, 0xC3	; 195
     6c0:	99 e0       	ldi	r25, 0x09	; 9
     6c2:	01 97       	sbiw	r24, 0x01	; 1
     6c4:	f1 f7       	brne	.-4      	; 0x6c2 <scroll_disp+0x124>
     6c6:	00 c0       	rjmp	.+0      	; 0x6c8 <scroll_disp+0x12a>
     6c8:	00 00       	nop
	_delay_ms(10);
	write_data(ap);
     6ca:	80 91 7b 00 	lds	r24, 0x007B
     6ce:	0e 94 3c 01 	call	0x278	; 0x278 <write_data>
     6d2:	83 ec       	ldi	r24, 0xC3	; 195
     6d4:	99 e0       	ldi	r25, 0x09	; 9
     6d6:	01 97       	sbiw	r24, 0x01	; 1
     6d8:	f1 f7       	brne	.-4      	; 0x6d6 <scroll_disp+0x138>
     6da:	00 c0       	rjmp	.+0      	; 0x6dc <scroll_disp+0x13e>
     6dc:	00 00       	nop
	_delay_ms(10);
}
     6de:	08 95       	ret

000006e0 <lcd_scroll>:
void lcd_scroll(unsigned char character){
	aa=ab;
     6e0:	90 91 77 00 	lds	r25, 0x0077
     6e4:	90 93 80 00 	sts	0x0080, r25
	ab=ac;
     6e8:	90 91 85 00 	lds	r25, 0x0085
     6ec:	90 93 77 00 	sts	0x0077, r25
	ac=ad;
     6f0:	90 91 76 00 	lds	r25, 0x0076
     6f4:	90 93 85 00 	sts	0x0085, r25
	ad=ae;
     6f8:	90 91 88 00 	lds	r25, 0x0088
     6fc:	90 93 76 00 	sts	0x0076, r25
	ae=af;
     700:	90 91 82 00 	lds	r25, 0x0082
     704:	90 93 88 00 	sts	0x0088, r25
	af=ag;
     708:	90 91 87 00 	lds	r25, 0x0087
     70c:	90 93 82 00 	sts	0x0082, r25
	ag=ah;
     710:	90 91 79 00 	lds	r25, 0x0079
     714:	90 93 87 00 	sts	0x0087, r25
	ah=ai;
     718:	90 91 81 00 	lds	r25, 0x0081
     71c:	90 93 79 00 	sts	0x0079, r25
	ai=aj;
     720:	90 91 78 00 	lds	r25, 0x0078
     724:	90 93 81 00 	sts	0x0081, r25
	aj=ak;
     728:	90 91 7a 00 	lds	r25, 0x007A
     72c:	90 93 78 00 	sts	0x0078, r25
	ak=al;
     730:	90 91 84 00 	lds	r25, 0x0084
     734:	90 93 7a 00 	sts	0x007A, r25
	al=am;
     738:	90 91 89 00 	lds	r25, 0x0089
     73c:	90 93 84 00 	sts	0x0084, r25
	am=an;
     740:	90 91 83 00 	lds	r25, 0x0083
     744:	90 93 89 00 	sts	0x0089, r25
	an=ao;
     748:	90 91 86 00 	lds	r25, 0x0086
     74c:	90 93 83 00 	sts	0x0083, r25
	ao=ap;
     750:	90 91 7b 00 	lds	r25, 0x007B
     754:	90 93 86 00 	sts	0x0086, r25
	ap=character;
     758:	80 93 7b 00 	sts	0x007B, r24
	scroll_disp();
     75c:	0e 94 cf 02 	call	0x59e	; 0x59e <scroll_disp>
}
     760:	08 95       	ret

00000762 <scroll_msg>:
void scroll_msg(unsigned char msg[]){
     762:	0f 93       	push	r16
     764:	1f 93       	push	r17
     766:	cf 93       	push	r28
     768:	df 93       	push	r29
	unsigned char z,v;
	v = strlen(msg);
     76a:	e8 2f       	mov	r30, r24
     76c:	f9 2f       	mov	r31, r25
     76e:	df 01       	movw	r26, r30
     770:	0d 90       	ld	r0, X+
     772:	00 20       	and	r0, r0
     774:	e9 f7       	brne	.-6      	; 0x770 <scroll_msg+0xe>
     776:	11 97       	sbiw	r26, 0x01	; 1
     778:	0a 2f       	mov	r16, r26
     77a:	08 1b       	sub	r16, r24
	for (z=0;z<v;z++){
     77c:	61 f0       	breq	.+24     	; 0x796 <scroll_msg+0x34>
     77e:	c8 2f       	mov	r28, r24
     780:	d9 2f       	mov	r29, r25
     782:	10 e0       	ldi	r17, 0x00	; 0
		write_cmd(0x80);
     784:	80 e8       	ldi	r24, 0x80	; 128
     786:	0e 94 47 01 	call	0x28e	; 0x28e <write_cmd>
		lcd_scroll(msg[z]);
     78a:	89 91       	ld	r24, Y+
     78c:	0e 94 70 03 	call	0x6e0	; 0x6e0 <lcd_scroll>
	scroll_disp();
}
void scroll_msg(unsigned char msg[]){
	unsigned char z,v;
	v = strlen(msg);
	for (z=0;z<v;z++){
     790:	1f 5f       	subi	r17, 0xFF	; 255
     792:	10 17       	cp	r17, r16
     794:	b8 f3       	brcs	.-18     	; 0x784 <scroll_msg+0x22>
		write_cmd(0x80);
		lcd_scroll(msg[z]);
	}
     796:	df 91       	pop	r29
     798:	cf 91       	pop	r28
     79a:	1f 91       	pop	r17
     79c:	0f 91       	pop	r16
     79e:	08 95       	ret

000007a0 <main>:



int main(void)
{
	DDRD = 0xFF;
     7a0:	8f ef       	ldi	r24, 0xFF	; 255
     7a2:	81 bb       	out	0x11, r24	; 17
	DDRB = 0x00;
     7a4:	17 ba       	out	0x17, r1	; 23
	DDRC |= bit7;
     7a6:	a7 9a       	sbi	0x14, 7	; 20
	DDRC |= bit6;
     7a8:	a6 9a       	sbi	0x14, 6	; 20
	ADC_init();
     7aa:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <ADC_init>
		checkVoltage();
		if (voltage > 9.01)
		{
			if (voltage == fullVoltage || voltage > fullVoltage)
			{
				stopCharging();
     7ae:	ce ec       	ldi	r28, 0xCE	; 206
     7b0:	d0 e0       	ldi	r29, 0x00	; 0
	DDRC |= bit6;
	ADC_init();

    while(1)
    {
		PORTD &= ~bit1;
     7b2:	91 98       	cbi	0x12, 1	; 18
		PORTD &= ~bit2;
     7b4:	92 98       	cbi	0x12, 2	; 18
     7b6:	8f e3       	ldi	r24, 0x3F	; 63
     7b8:	9d e0       	ldi	r25, 0x0D	; 13
     7ba:	a3 e0       	ldi	r26, 0x03	; 3
     7bc:	81 50       	subi	r24, 0x01	; 1
     7be:	90 40       	sbci	r25, 0x00	; 0
     7c0:	a0 40       	sbci	r26, 0x00	; 0
     7c2:	e1 f7       	brne	.-8      	; 0x7bc <main+0x1c>
     7c4:	00 c0       	rjmp	.+0      	; 0x7c6 <main+0x26>
     7c6:	00 00       	nop
		_delay_ms(1000);
		checkVoltage();
     7c8:	0e 94 e6 00 	call	0x1cc	; 0x1cc <checkVoltage>
		if (voltage > 9.01)
     7cc:	c0 90 7c 00 	lds	r12, 0x007C
     7d0:	d0 90 7d 00 	lds	r13, 0x007D
     7d4:	e0 90 7e 00 	lds	r14, 0x007E
     7d8:	f0 90 7f 00 	lds	r15, 0x007F
     7dc:	c7 01       	movw	r24, r14
     7de:	b6 01       	movw	r22, r12
     7e0:	26 ef       	ldi	r18, 0xF6	; 246
     7e2:	38 e2       	ldi	r19, 0x28	; 40
     7e4:	40 e1       	ldi	r20, 0x10	; 16
     7e6:	51 e4       	ldi	r21, 0x41	; 65
     7e8:	0e 94 0d 06 	call	0xc1a	; 0xc1a <__gesf2>
     7ec:	18 16       	cp	r1, r24
     7ee:	0c f0       	brlt	.+2      	; 0x7f2 <main+0x52>
     7f0:	48 c0       	rjmp	.+144    	; 0x882 <__stack+0x23>
		{
			if (voltage == fullVoltage || voltage > fullVoltage)
     7f2:	80 90 66 00 	lds	r8, 0x0066
     7f6:	90 90 67 00 	lds	r9, 0x0067
     7fa:	a0 90 68 00 	lds	r10, 0x0068
     7fe:	b0 90 69 00 	lds	r11, 0x0069
     802:	c7 01       	movw	r24, r14
     804:	b6 01       	movw	r22, r12
     806:	a5 01       	movw	r20, r10
     808:	94 01       	movw	r18, r8
     80a:	0e 94 ef 04 	call	0x9de	; 0x9de <__cmpsf2>
     80e:	88 23       	and	r24, r24
     810:	41 f0       	breq	.+16     	; 0x822 <main+0x82>
     812:	c7 01       	movw	r24, r14
     814:	b6 01       	movw	r22, r12
     816:	a5 01       	movw	r20, r10
     818:	94 01       	movw	r18, r8
     81a:	0e 94 0d 06 	call	0xc1a	; 0xc1a <__gesf2>
     81e:	18 16       	cp	r1, r24
     820:	6c f5       	brge	.+90     	; 0x87c <__stack+0x1d>
			{
				stopCharging();
     822:	fe 01       	movw	r30, r28
     824:	09 95       	icall
     826:	8f e3       	ldi	r24, 0x3F	; 63
     828:	92 e4       	ldi	r25, 0x42	; 66
     82a:	af e0       	ldi	r26, 0x0F	; 15
     82c:	81 50       	subi	r24, 0x01	; 1
     82e:	90 40       	sbci	r25, 0x00	; 0
     830:	a0 40       	sbci	r26, 0x00	; 0
     832:	e1 f7       	brne	.-8      	; 0x82c <main+0x8c>
     834:	00 c0       	rjmp	.+0      	; 0x836 <main+0x96>
     836:	00 00       	nop
				_delay_ms(5000); //delay for 5 seconds
				if (voltage < (fullVoltage - 1))
     838:	60 91 66 00 	lds	r22, 0x0066
     83c:	70 91 67 00 	lds	r23, 0x0067
     840:	80 91 68 00 	lds	r24, 0x0068
     844:	90 91 69 00 	lds	r25, 0x0069
     848:	20 e0       	ldi	r18, 0x00	; 0
     84a:	30 e0       	ldi	r19, 0x00	; 0
     84c:	40 e8       	ldi	r20, 0x80	; 128
     84e:	5f e3       	ldi	r21, 0x3F	; 63
     850:	0e 94 8a 04 	call	0x914	; 0x914 <__subsf3>
     854:	20 91 7c 00 	lds	r18, 0x007C
     858:	30 91 7d 00 	lds	r19, 0x007D
     85c:	40 91 7e 00 	lds	r20, 0x007E
     860:	50 91 7f 00 	lds	r21, 0x007F
     864:	0e 94 0d 06 	call	0xc1a	; 0xc1a <__gesf2>
     868:	18 16       	cp	r1, r24
     86a:	24 f4       	brge	.+8      	; 0x874 <__stack+0x15>
				{
					/* subtract the float voltage and check the actual battery voltage, if the battery voltage difference is greater than 1,
					 * restart the charging
					*/
					startCharging();
     86c:	0e 94 c6 00 	call	0x18c	; 0x18c <startCharging>
					PORTD |= bit0;
     870:	90 9a       	sbi	0x12, 0	; 18
     872:	0b c0       	rjmp	.+22     	; 0x88a <__stack+0x2b>
					
				}else{
					//if the charging voltage minus the float voltage is within a difference of 1, stop the charging
					stopCharging();
     874:	fe 01       	movw	r30, r28
     876:	09 95       	icall
					PORTD |= bit0;
     878:	90 9a       	sbi	0x12, 0	; 18
     87a:	07 c0       	rjmp	.+14     	; 0x88a <__stack+0x2b>
				}
			}else{
				startCharging();
     87c:	0e 94 c6 00 	call	0x18c	; 0x18c <startCharging>
     880:	04 c0       	rjmp	.+8      	; 0x88a <__stack+0x2b>
			}
		}else{
				startCharging(); // start charging
     882:	0e 94 c6 00 	call	0x18c	; 0x18c <startCharging>
				shutdown(); //shutdown the inverter;
     886:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <shutdown>
			
		}
		if (isCharging && (voltage > lowBattery))
     88a:	80 91 74 00 	lds	r24, 0x0074
     88e:	90 91 75 00 	lds	r25, 0x0075
     892:	00 97       	sbiw	r24, 0x00	; 0
     894:	f9 f0       	breq	.+62     	; 0x8d4 <__stack+0x75>
     896:	60 91 7c 00 	lds	r22, 0x007C
     89a:	70 91 7d 00 	lds	r23, 0x007D
     89e:	80 91 7e 00 	lds	r24, 0x007E
     8a2:	90 91 7f 00 	lds	r25, 0x007F
     8a6:	20 91 62 00 	lds	r18, 0x0062
     8aa:	30 91 63 00 	lds	r19, 0x0063
     8ae:	40 91 64 00 	lds	r20, 0x0064
     8b2:	50 91 65 00 	lds	r21, 0x0065
     8b6:	0e 94 0d 06 	call	0xc1a	; 0xc1a <__gesf2>
     8ba:	18 16       	cp	r1, r24
     8bc:	5c f4       	brge	.+22     	; 0x8d4 <__stack+0x75>
		{
			PORTD &= ~bit0;
     8be:	90 98       	cbi	0x12, 0	; 18
			PORTD |= bit1;
     8c0:	91 9a       	sbi	0x12, 1	; 18
     8c2:	8f e3       	ldi	r24, 0x3F	; 63
     8c4:	9d e0       	ldi	r25, 0x0D	; 13
     8c6:	a3 e0       	ldi	r26, 0x03	; 3
     8c8:	81 50       	subi	r24, 0x01	; 1
     8ca:	90 40       	sbci	r25, 0x00	; 0
     8cc:	a0 40       	sbci	r26, 0x00	; 0
     8ce:	e1 f7       	brne	.-8      	; 0x8c8 <__stack+0x69>
     8d0:	00 c0       	rjmp	.+0      	; 0x8d2 <__stack+0x73>
     8d2:	00 00       	nop
			_delay_ms(1000);
		}
		if (voltage <= lowBattery)
     8d4:	60 91 7c 00 	lds	r22, 0x007C
     8d8:	70 91 7d 00 	lds	r23, 0x007D
     8dc:	80 91 7e 00 	lds	r24, 0x007E
     8e0:	90 91 7f 00 	lds	r25, 0x007F
     8e4:	20 91 62 00 	lds	r18, 0x0062
     8e8:	30 91 63 00 	lds	r19, 0x0063
     8ec:	40 91 64 00 	lds	r20, 0x0064
     8f0:	50 91 65 00 	lds	r21, 0x0065
     8f4:	0e 94 ef 04 	call	0x9de	; 0x9de <__cmpsf2>
     8f8:	18 16       	cp	r1, r24
     8fa:	0c f4       	brge	.+2      	; 0x8fe <__stack+0x9f>
     8fc:	5a cf       	rjmp	.-332    	; 0x7b2 <main+0x12>
		{
			PORTD |=bit2; //blink the warning LED for low battery
     8fe:	92 9a       	sbi	0x12, 2	; 18
     900:	8f e3       	ldi	r24, 0x3F	; 63
     902:	9d e0       	ldi	r25, 0x0D	; 13
     904:	a3 e0       	ldi	r26, 0x03	; 3
     906:	81 50       	subi	r24, 0x01	; 1
     908:	90 40       	sbci	r25, 0x00	; 0
     90a:	a0 40       	sbci	r26, 0x00	; 0
     90c:	e1 f7       	brne	.-8      	; 0x906 <__stack+0xa7>
     90e:	00 c0       	rjmp	.+0      	; 0x910 <__stack+0xb1>
     910:	00 00       	nop
     912:	4f cf       	rjmp	.-354    	; 0x7b2 <main+0x12>

00000914 <__subsf3>:
     914:	50 58       	subi	r21, 0x80	; 128

00000916 <__addsf3>:
     916:	bb 27       	eor	r27, r27
     918:	aa 27       	eor	r26, r26
     91a:	0e d0       	rcall	.+28     	; 0x938 <__addsf3x>
     91c:	44 c1       	rjmp	.+648    	; 0xba6 <__fp_round>
     91e:	35 d1       	rcall	.+618    	; 0xb8a <__fp_pscA>
     920:	30 f0       	brcs	.+12     	; 0x92e <__addsf3+0x18>
     922:	3a d1       	rcall	.+628    	; 0xb98 <__fp_pscB>
     924:	20 f0       	brcs	.+8      	; 0x92e <__addsf3+0x18>
     926:	31 f4       	brne	.+12     	; 0x934 <__addsf3+0x1e>
     928:	9f 3f       	cpi	r25, 0xFF	; 255
     92a:	11 f4       	brne	.+4      	; 0x930 <__addsf3+0x1a>
     92c:	1e f4       	brtc	.+6      	; 0x934 <__addsf3+0x1e>
     92e:	2a c1       	rjmp	.+596    	; 0xb84 <__fp_nan>
     930:	0e f4       	brtc	.+2      	; 0x934 <__addsf3+0x1e>
     932:	e0 95       	com	r30
     934:	e7 fb       	bst	r30, 7
     936:	20 c1       	rjmp	.+576    	; 0xb78 <__fp_inf>

00000938 <__addsf3x>:
     938:	e9 2f       	mov	r30, r25
     93a:	46 d1       	rcall	.+652    	; 0xbc8 <__fp_split3>
     93c:	80 f3       	brcs	.-32     	; 0x91e <__addsf3+0x8>
     93e:	ba 17       	cp	r27, r26
     940:	62 07       	cpc	r22, r18
     942:	73 07       	cpc	r23, r19
     944:	84 07       	cpc	r24, r20
     946:	95 07       	cpc	r25, r21
     948:	18 f0       	brcs	.+6      	; 0x950 <__addsf3x+0x18>
     94a:	71 f4       	brne	.+28     	; 0x968 <__addsf3x+0x30>
     94c:	9e f5       	brtc	.+102    	; 0x9b4 <__addsf3x+0x7c>
     94e:	5e c1       	rjmp	.+700    	; 0xc0c <__fp_zero>
     950:	0e f4       	brtc	.+2      	; 0x954 <__addsf3x+0x1c>
     952:	e0 95       	com	r30
     954:	0b 2e       	mov	r0, r27
     956:	ba 2f       	mov	r27, r26
     958:	a0 2d       	mov	r26, r0
     95a:	0b 01       	movw	r0, r22
     95c:	b9 01       	movw	r22, r18
     95e:	90 01       	movw	r18, r0
     960:	0c 01       	movw	r0, r24
     962:	ca 01       	movw	r24, r20
     964:	a0 01       	movw	r20, r0
     966:	11 24       	eor	r1, r1
     968:	ff 27       	eor	r31, r31
     96a:	59 1b       	sub	r21, r25
     96c:	99 f0       	breq	.+38     	; 0x994 <__addsf3x+0x5c>
     96e:	59 3f       	cpi	r21, 0xF9	; 249
     970:	50 f4       	brcc	.+20     	; 0x986 <__addsf3x+0x4e>
     972:	50 3e       	cpi	r21, 0xE0	; 224
     974:	68 f1       	brcs	.+90     	; 0x9d0 <__addsf3x+0x98>
     976:	1a 16       	cp	r1, r26
     978:	f0 40       	sbci	r31, 0x00	; 0
     97a:	a2 2f       	mov	r26, r18
     97c:	23 2f       	mov	r18, r19
     97e:	34 2f       	mov	r19, r20
     980:	44 27       	eor	r20, r20
     982:	58 5f       	subi	r21, 0xF8	; 248
     984:	f3 cf       	rjmp	.-26     	; 0x96c <__addsf3x+0x34>
     986:	46 95       	lsr	r20
     988:	37 95       	ror	r19
     98a:	27 95       	ror	r18
     98c:	a7 95       	ror	r26
     98e:	f0 40       	sbci	r31, 0x00	; 0
     990:	53 95       	inc	r21
     992:	c9 f7       	brne	.-14     	; 0x986 <__addsf3x+0x4e>
     994:	7e f4       	brtc	.+30     	; 0x9b4 <__addsf3x+0x7c>
     996:	1f 16       	cp	r1, r31
     998:	ba 0b       	sbc	r27, r26
     99a:	62 0b       	sbc	r22, r18
     99c:	73 0b       	sbc	r23, r19
     99e:	84 0b       	sbc	r24, r20
     9a0:	ba f0       	brmi	.+46     	; 0x9d0 <__addsf3x+0x98>
     9a2:	91 50       	subi	r25, 0x01	; 1
     9a4:	a1 f0       	breq	.+40     	; 0x9ce <__addsf3x+0x96>
     9a6:	ff 0f       	add	r31, r31
     9a8:	bb 1f       	adc	r27, r27
     9aa:	66 1f       	adc	r22, r22
     9ac:	77 1f       	adc	r23, r23
     9ae:	88 1f       	adc	r24, r24
     9b0:	c2 f7       	brpl	.-16     	; 0x9a2 <__addsf3x+0x6a>
     9b2:	0e c0       	rjmp	.+28     	; 0x9d0 <__addsf3x+0x98>
     9b4:	ba 0f       	add	r27, r26
     9b6:	62 1f       	adc	r22, r18
     9b8:	73 1f       	adc	r23, r19
     9ba:	84 1f       	adc	r24, r20
     9bc:	48 f4       	brcc	.+18     	; 0x9d0 <__addsf3x+0x98>
     9be:	87 95       	ror	r24
     9c0:	77 95       	ror	r23
     9c2:	67 95       	ror	r22
     9c4:	b7 95       	ror	r27
     9c6:	f7 95       	ror	r31
     9c8:	9e 3f       	cpi	r25, 0xFE	; 254
     9ca:	08 f0       	brcs	.+2      	; 0x9ce <__addsf3x+0x96>
     9cc:	b3 cf       	rjmp	.-154    	; 0x934 <__addsf3+0x1e>
     9ce:	93 95       	inc	r25
     9d0:	88 0f       	add	r24, r24
     9d2:	08 f0       	brcs	.+2      	; 0x9d6 <__addsf3x+0x9e>
     9d4:	99 27       	eor	r25, r25
     9d6:	ee 0f       	add	r30, r30
     9d8:	97 95       	ror	r25
     9da:	87 95       	ror	r24
     9dc:	08 95       	ret

000009de <__cmpsf2>:
     9de:	a8 d0       	rcall	.+336    	; 0xb30 <__fp_cmp>
     9e0:	08 f4       	brcc	.+2      	; 0x9e4 <__cmpsf2+0x6>
     9e2:	81 e0       	ldi	r24, 0x01	; 1
     9e4:	08 95       	ret

000009e6 <__divsf3>:
     9e6:	0c d0       	rcall	.+24     	; 0xa00 <__divsf3x>
     9e8:	de c0       	rjmp	.+444    	; 0xba6 <__fp_round>
     9ea:	d6 d0       	rcall	.+428    	; 0xb98 <__fp_pscB>
     9ec:	40 f0       	brcs	.+16     	; 0x9fe <__divsf3+0x18>
     9ee:	cd d0       	rcall	.+410    	; 0xb8a <__fp_pscA>
     9f0:	30 f0       	brcs	.+12     	; 0x9fe <__divsf3+0x18>
     9f2:	21 f4       	brne	.+8      	; 0x9fc <__divsf3+0x16>
     9f4:	5f 3f       	cpi	r21, 0xFF	; 255
     9f6:	19 f0       	breq	.+6      	; 0x9fe <__divsf3+0x18>
     9f8:	bf c0       	rjmp	.+382    	; 0xb78 <__fp_inf>
     9fa:	51 11       	cpse	r21, r1
     9fc:	08 c1       	rjmp	.+528    	; 0xc0e <__fp_szero>
     9fe:	c2 c0       	rjmp	.+388    	; 0xb84 <__fp_nan>

00000a00 <__divsf3x>:
     a00:	e3 d0       	rcall	.+454    	; 0xbc8 <__fp_split3>
     a02:	98 f3       	brcs	.-26     	; 0x9ea <__divsf3+0x4>

00000a04 <__divsf3_pse>:
     a04:	99 23       	and	r25, r25
     a06:	c9 f3       	breq	.-14     	; 0x9fa <__divsf3+0x14>
     a08:	55 23       	and	r21, r21
     a0a:	b1 f3       	breq	.-20     	; 0x9f8 <__divsf3+0x12>
     a0c:	95 1b       	sub	r25, r21
     a0e:	55 0b       	sbc	r21, r21
     a10:	bb 27       	eor	r27, r27
     a12:	aa 27       	eor	r26, r26
     a14:	62 17       	cp	r22, r18
     a16:	73 07       	cpc	r23, r19
     a18:	84 07       	cpc	r24, r20
     a1a:	38 f0       	brcs	.+14     	; 0xa2a <__divsf3_pse+0x26>
     a1c:	9f 5f       	subi	r25, 0xFF	; 255
     a1e:	5f 4f       	sbci	r21, 0xFF	; 255
     a20:	22 0f       	add	r18, r18
     a22:	33 1f       	adc	r19, r19
     a24:	44 1f       	adc	r20, r20
     a26:	aa 1f       	adc	r26, r26
     a28:	a9 f3       	breq	.-22     	; 0xa14 <__divsf3_pse+0x10>
     a2a:	33 d0       	rcall	.+102    	; 0xa92 <__divsf3_pse+0x8e>
     a2c:	0e 2e       	mov	r0, r30
     a2e:	3a f0       	brmi	.+14     	; 0xa3e <__divsf3_pse+0x3a>
     a30:	e0 e8       	ldi	r30, 0x80	; 128
     a32:	30 d0       	rcall	.+96     	; 0xa94 <__divsf3_pse+0x90>
     a34:	91 50       	subi	r25, 0x01	; 1
     a36:	50 40       	sbci	r21, 0x00	; 0
     a38:	e6 95       	lsr	r30
     a3a:	00 1c       	adc	r0, r0
     a3c:	ca f7       	brpl	.-14     	; 0xa30 <__divsf3_pse+0x2c>
     a3e:	29 d0       	rcall	.+82     	; 0xa92 <__divsf3_pse+0x8e>
     a40:	fe 2f       	mov	r31, r30
     a42:	27 d0       	rcall	.+78     	; 0xa92 <__divsf3_pse+0x8e>
     a44:	66 0f       	add	r22, r22
     a46:	77 1f       	adc	r23, r23
     a48:	88 1f       	adc	r24, r24
     a4a:	bb 1f       	adc	r27, r27
     a4c:	26 17       	cp	r18, r22
     a4e:	37 07       	cpc	r19, r23
     a50:	48 07       	cpc	r20, r24
     a52:	ab 07       	cpc	r26, r27
     a54:	b0 e8       	ldi	r27, 0x80	; 128
     a56:	09 f0       	breq	.+2      	; 0xa5a <__divsf3_pse+0x56>
     a58:	bb 0b       	sbc	r27, r27
     a5a:	80 2d       	mov	r24, r0
     a5c:	bf 01       	movw	r22, r30
     a5e:	ff 27       	eor	r31, r31
     a60:	93 58       	subi	r25, 0x83	; 131
     a62:	5f 4f       	sbci	r21, 0xFF	; 255
     a64:	2a f0       	brmi	.+10     	; 0xa70 <__divsf3_pse+0x6c>
     a66:	9e 3f       	cpi	r25, 0xFE	; 254
     a68:	51 05       	cpc	r21, r1
     a6a:	68 f0       	brcs	.+26     	; 0xa86 <__divsf3_pse+0x82>
     a6c:	85 c0       	rjmp	.+266    	; 0xb78 <__fp_inf>
     a6e:	cf c0       	rjmp	.+414    	; 0xc0e <__fp_szero>
     a70:	5f 3f       	cpi	r21, 0xFF	; 255
     a72:	ec f3       	brlt	.-6      	; 0xa6e <__divsf3_pse+0x6a>
     a74:	98 3e       	cpi	r25, 0xE8	; 232
     a76:	dc f3       	brlt	.-10     	; 0xa6e <__divsf3_pse+0x6a>
     a78:	86 95       	lsr	r24
     a7a:	77 95       	ror	r23
     a7c:	67 95       	ror	r22
     a7e:	b7 95       	ror	r27
     a80:	f7 95       	ror	r31
     a82:	9f 5f       	subi	r25, 0xFF	; 255
     a84:	c9 f7       	brne	.-14     	; 0xa78 <__divsf3_pse+0x74>
     a86:	88 0f       	add	r24, r24
     a88:	91 1d       	adc	r25, r1
     a8a:	96 95       	lsr	r25
     a8c:	87 95       	ror	r24
     a8e:	97 f9       	bld	r25, 7
     a90:	08 95       	ret
     a92:	e1 e0       	ldi	r30, 0x01	; 1
     a94:	66 0f       	add	r22, r22
     a96:	77 1f       	adc	r23, r23
     a98:	88 1f       	adc	r24, r24
     a9a:	bb 1f       	adc	r27, r27
     a9c:	62 17       	cp	r22, r18
     a9e:	73 07       	cpc	r23, r19
     aa0:	84 07       	cpc	r24, r20
     aa2:	ba 07       	cpc	r27, r26
     aa4:	20 f0       	brcs	.+8      	; 0xaae <__divsf3_pse+0xaa>
     aa6:	62 1b       	sub	r22, r18
     aa8:	73 0b       	sbc	r23, r19
     aaa:	84 0b       	sbc	r24, r20
     aac:	ba 0b       	sbc	r27, r26
     aae:	ee 1f       	adc	r30, r30
     ab0:	88 f7       	brcc	.-30     	; 0xa94 <__divsf3_pse+0x90>
     ab2:	e0 95       	com	r30
     ab4:	08 95       	ret

00000ab6 <__floatunsisf>:
     ab6:	e8 94       	clt
     ab8:	09 c0       	rjmp	.+18     	; 0xacc <__floatsisf+0x12>

00000aba <__floatsisf>:
     aba:	97 fb       	bst	r25, 7
     abc:	3e f4       	brtc	.+14     	; 0xacc <__floatsisf+0x12>
     abe:	90 95       	com	r25
     ac0:	80 95       	com	r24
     ac2:	70 95       	com	r23
     ac4:	61 95       	neg	r22
     ac6:	7f 4f       	sbci	r23, 0xFF	; 255
     ac8:	8f 4f       	sbci	r24, 0xFF	; 255
     aca:	9f 4f       	sbci	r25, 0xFF	; 255
     acc:	99 23       	and	r25, r25
     ace:	a9 f0       	breq	.+42     	; 0xafa <__floatsisf+0x40>
     ad0:	f9 2f       	mov	r31, r25
     ad2:	96 e9       	ldi	r25, 0x96	; 150
     ad4:	bb 27       	eor	r27, r27
     ad6:	93 95       	inc	r25
     ad8:	f6 95       	lsr	r31
     ada:	87 95       	ror	r24
     adc:	77 95       	ror	r23
     ade:	67 95       	ror	r22
     ae0:	b7 95       	ror	r27
     ae2:	f1 11       	cpse	r31, r1
     ae4:	f8 cf       	rjmp	.-16     	; 0xad6 <__floatsisf+0x1c>
     ae6:	fa f4       	brpl	.+62     	; 0xb26 <__floatsisf+0x6c>
     ae8:	bb 0f       	add	r27, r27
     aea:	11 f4       	brne	.+4      	; 0xaf0 <__floatsisf+0x36>
     aec:	60 ff       	sbrs	r22, 0
     aee:	1b c0       	rjmp	.+54     	; 0xb26 <__floatsisf+0x6c>
     af0:	6f 5f       	subi	r22, 0xFF	; 255
     af2:	7f 4f       	sbci	r23, 0xFF	; 255
     af4:	8f 4f       	sbci	r24, 0xFF	; 255
     af6:	9f 4f       	sbci	r25, 0xFF	; 255
     af8:	16 c0       	rjmp	.+44     	; 0xb26 <__floatsisf+0x6c>
     afa:	88 23       	and	r24, r24
     afc:	11 f0       	breq	.+4      	; 0xb02 <__floatsisf+0x48>
     afe:	96 e9       	ldi	r25, 0x96	; 150
     b00:	11 c0       	rjmp	.+34     	; 0xb24 <__floatsisf+0x6a>
     b02:	77 23       	and	r23, r23
     b04:	21 f0       	breq	.+8      	; 0xb0e <__floatsisf+0x54>
     b06:	9e e8       	ldi	r25, 0x8E	; 142
     b08:	87 2f       	mov	r24, r23
     b0a:	76 2f       	mov	r23, r22
     b0c:	05 c0       	rjmp	.+10     	; 0xb18 <__floatsisf+0x5e>
     b0e:	66 23       	and	r22, r22
     b10:	71 f0       	breq	.+28     	; 0xb2e <__floatsisf+0x74>
     b12:	96 e8       	ldi	r25, 0x86	; 134
     b14:	86 2f       	mov	r24, r22
     b16:	70 e0       	ldi	r23, 0x00	; 0
     b18:	60 e0       	ldi	r22, 0x00	; 0
     b1a:	2a f0       	brmi	.+10     	; 0xb26 <__floatsisf+0x6c>
     b1c:	9a 95       	dec	r25
     b1e:	66 0f       	add	r22, r22
     b20:	77 1f       	adc	r23, r23
     b22:	88 1f       	adc	r24, r24
     b24:	da f7       	brpl	.-10     	; 0xb1c <__floatsisf+0x62>
     b26:	88 0f       	add	r24, r24
     b28:	96 95       	lsr	r25
     b2a:	87 95       	ror	r24
     b2c:	97 f9       	bld	r25, 7
     b2e:	08 95       	ret

00000b30 <__fp_cmp>:
     b30:	99 0f       	add	r25, r25
     b32:	00 08       	sbc	r0, r0
     b34:	55 0f       	add	r21, r21
     b36:	aa 0b       	sbc	r26, r26
     b38:	e0 e8       	ldi	r30, 0x80	; 128
     b3a:	fe ef       	ldi	r31, 0xFE	; 254
     b3c:	16 16       	cp	r1, r22
     b3e:	17 06       	cpc	r1, r23
     b40:	e8 07       	cpc	r30, r24
     b42:	f9 07       	cpc	r31, r25
     b44:	c0 f0       	brcs	.+48     	; 0xb76 <__fp_cmp+0x46>
     b46:	12 16       	cp	r1, r18
     b48:	13 06       	cpc	r1, r19
     b4a:	e4 07       	cpc	r30, r20
     b4c:	f5 07       	cpc	r31, r21
     b4e:	98 f0       	brcs	.+38     	; 0xb76 <__fp_cmp+0x46>
     b50:	62 1b       	sub	r22, r18
     b52:	73 0b       	sbc	r23, r19
     b54:	84 0b       	sbc	r24, r20
     b56:	95 0b       	sbc	r25, r21
     b58:	39 f4       	brne	.+14     	; 0xb68 <__fp_cmp+0x38>
     b5a:	0a 26       	eor	r0, r26
     b5c:	61 f0       	breq	.+24     	; 0xb76 <__fp_cmp+0x46>
     b5e:	23 2b       	or	r18, r19
     b60:	24 2b       	or	r18, r20
     b62:	25 2b       	or	r18, r21
     b64:	21 f4       	brne	.+8      	; 0xb6e <__fp_cmp+0x3e>
     b66:	08 95       	ret
     b68:	0a 26       	eor	r0, r26
     b6a:	09 f4       	brne	.+2      	; 0xb6e <__fp_cmp+0x3e>
     b6c:	a1 40       	sbci	r26, 0x01	; 1
     b6e:	a6 95       	lsr	r26
     b70:	8f ef       	ldi	r24, 0xFF	; 255
     b72:	81 1d       	adc	r24, r1
     b74:	81 1d       	adc	r24, r1
     b76:	08 95       	ret

00000b78 <__fp_inf>:
     b78:	97 f9       	bld	r25, 7
     b7a:	9f 67       	ori	r25, 0x7F	; 127
     b7c:	80 e8       	ldi	r24, 0x80	; 128
     b7e:	70 e0       	ldi	r23, 0x00	; 0
     b80:	60 e0       	ldi	r22, 0x00	; 0
     b82:	08 95       	ret

00000b84 <__fp_nan>:
     b84:	9f ef       	ldi	r25, 0xFF	; 255
     b86:	80 ec       	ldi	r24, 0xC0	; 192
     b88:	08 95       	ret

00000b8a <__fp_pscA>:
     b8a:	00 24       	eor	r0, r0
     b8c:	0a 94       	dec	r0
     b8e:	16 16       	cp	r1, r22
     b90:	17 06       	cpc	r1, r23
     b92:	18 06       	cpc	r1, r24
     b94:	09 06       	cpc	r0, r25
     b96:	08 95       	ret

00000b98 <__fp_pscB>:
     b98:	00 24       	eor	r0, r0
     b9a:	0a 94       	dec	r0
     b9c:	12 16       	cp	r1, r18
     b9e:	13 06       	cpc	r1, r19
     ba0:	14 06       	cpc	r1, r20
     ba2:	05 06       	cpc	r0, r21
     ba4:	08 95       	ret

00000ba6 <__fp_round>:
     ba6:	09 2e       	mov	r0, r25
     ba8:	03 94       	inc	r0
     baa:	00 0c       	add	r0, r0
     bac:	11 f4       	brne	.+4      	; 0xbb2 <__fp_round+0xc>
     bae:	88 23       	and	r24, r24
     bb0:	52 f0       	brmi	.+20     	; 0xbc6 <__fp_round+0x20>
     bb2:	bb 0f       	add	r27, r27
     bb4:	40 f4       	brcc	.+16     	; 0xbc6 <__fp_round+0x20>
     bb6:	bf 2b       	or	r27, r31
     bb8:	11 f4       	brne	.+4      	; 0xbbe <__fp_round+0x18>
     bba:	60 ff       	sbrs	r22, 0
     bbc:	04 c0       	rjmp	.+8      	; 0xbc6 <__fp_round+0x20>
     bbe:	6f 5f       	subi	r22, 0xFF	; 255
     bc0:	7f 4f       	sbci	r23, 0xFF	; 255
     bc2:	8f 4f       	sbci	r24, 0xFF	; 255
     bc4:	9f 4f       	sbci	r25, 0xFF	; 255
     bc6:	08 95       	ret

00000bc8 <__fp_split3>:
     bc8:	57 fd       	sbrc	r21, 7
     bca:	90 58       	subi	r25, 0x80	; 128
     bcc:	44 0f       	add	r20, r20
     bce:	55 1f       	adc	r21, r21
     bd0:	59 f0       	breq	.+22     	; 0xbe8 <__fp_splitA+0x10>
     bd2:	5f 3f       	cpi	r21, 0xFF	; 255
     bd4:	71 f0       	breq	.+28     	; 0xbf2 <__fp_splitA+0x1a>
     bd6:	47 95       	ror	r20

00000bd8 <__fp_splitA>:
     bd8:	88 0f       	add	r24, r24
     bda:	97 fb       	bst	r25, 7
     bdc:	99 1f       	adc	r25, r25
     bde:	61 f0       	breq	.+24     	; 0xbf8 <__fp_splitA+0x20>
     be0:	9f 3f       	cpi	r25, 0xFF	; 255
     be2:	79 f0       	breq	.+30     	; 0xc02 <__fp_splitA+0x2a>
     be4:	87 95       	ror	r24
     be6:	08 95       	ret
     be8:	12 16       	cp	r1, r18
     bea:	13 06       	cpc	r1, r19
     bec:	14 06       	cpc	r1, r20
     bee:	55 1f       	adc	r21, r21
     bf0:	f2 cf       	rjmp	.-28     	; 0xbd6 <__fp_split3+0xe>
     bf2:	46 95       	lsr	r20
     bf4:	f1 df       	rcall	.-30     	; 0xbd8 <__fp_splitA>
     bf6:	08 c0       	rjmp	.+16     	; 0xc08 <__fp_splitA+0x30>
     bf8:	16 16       	cp	r1, r22
     bfa:	17 06       	cpc	r1, r23
     bfc:	18 06       	cpc	r1, r24
     bfe:	99 1f       	adc	r25, r25
     c00:	f1 cf       	rjmp	.-30     	; 0xbe4 <__fp_splitA+0xc>
     c02:	86 95       	lsr	r24
     c04:	71 05       	cpc	r23, r1
     c06:	61 05       	cpc	r22, r1
     c08:	08 94       	sec
     c0a:	08 95       	ret

00000c0c <__fp_zero>:
     c0c:	e8 94       	clt

00000c0e <__fp_szero>:
     c0e:	bb 27       	eor	r27, r27
     c10:	66 27       	eor	r22, r22
     c12:	77 27       	eor	r23, r23
     c14:	cb 01       	movw	r24, r22
     c16:	97 f9       	bld	r25, 7
     c18:	08 95       	ret

00000c1a <__gesf2>:
     c1a:	8a df       	rcall	.-236    	; 0xb30 <__fp_cmp>
     c1c:	08 f4       	brcc	.+2      	; 0xc20 <__gesf2+0x6>
     c1e:	8f ef       	ldi	r24, 0xFF	; 255
     c20:	08 95       	ret

00000c22 <__mulsf3>:
     c22:	0b d0       	rcall	.+22     	; 0xc3a <__mulsf3x>
     c24:	c0 cf       	rjmp	.-128    	; 0xba6 <__fp_round>
     c26:	b1 df       	rcall	.-158    	; 0xb8a <__fp_pscA>
     c28:	28 f0       	brcs	.+10     	; 0xc34 <__mulsf3+0x12>
     c2a:	b6 df       	rcall	.-148    	; 0xb98 <__fp_pscB>
     c2c:	18 f0       	brcs	.+6      	; 0xc34 <__mulsf3+0x12>
     c2e:	95 23       	and	r25, r21
     c30:	09 f0       	breq	.+2      	; 0xc34 <__mulsf3+0x12>
     c32:	a2 cf       	rjmp	.-188    	; 0xb78 <__fp_inf>
     c34:	a7 cf       	rjmp	.-178    	; 0xb84 <__fp_nan>
     c36:	11 24       	eor	r1, r1
     c38:	ea cf       	rjmp	.-44     	; 0xc0e <__fp_szero>

00000c3a <__mulsf3x>:
     c3a:	c6 df       	rcall	.-116    	; 0xbc8 <__fp_split3>
     c3c:	a0 f3       	brcs	.-24     	; 0xc26 <__mulsf3+0x4>

00000c3e <__mulsf3_pse>:
     c3e:	95 9f       	mul	r25, r21
     c40:	d1 f3       	breq	.-12     	; 0xc36 <__mulsf3+0x14>
     c42:	95 0f       	add	r25, r21
     c44:	50 e0       	ldi	r21, 0x00	; 0
     c46:	55 1f       	adc	r21, r21
     c48:	62 9f       	mul	r22, r18
     c4a:	f0 01       	movw	r30, r0
     c4c:	72 9f       	mul	r23, r18
     c4e:	bb 27       	eor	r27, r27
     c50:	f0 0d       	add	r31, r0
     c52:	b1 1d       	adc	r27, r1
     c54:	63 9f       	mul	r22, r19
     c56:	aa 27       	eor	r26, r26
     c58:	f0 0d       	add	r31, r0
     c5a:	b1 1d       	adc	r27, r1
     c5c:	aa 1f       	adc	r26, r26
     c5e:	64 9f       	mul	r22, r20
     c60:	66 27       	eor	r22, r22
     c62:	b0 0d       	add	r27, r0
     c64:	a1 1d       	adc	r26, r1
     c66:	66 1f       	adc	r22, r22
     c68:	82 9f       	mul	r24, r18
     c6a:	22 27       	eor	r18, r18
     c6c:	b0 0d       	add	r27, r0
     c6e:	a1 1d       	adc	r26, r1
     c70:	62 1f       	adc	r22, r18
     c72:	73 9f       	mul	r23, r19
     c74:	b0 0d       	add	r27, r0
     c76:	a1 1d       	adc	r26, r1
     c78:	62 1f       	adc	r22, r18
     c7a:	83 9f       	mul	r24, r19
     c7c:	a0 0d       	add	r26, r0
     c7e:	61 1d       	adc	r22, r1
     c80:	22 1f       	adc	r18, r18
     c82:	74 9f       	mul	r23, r20
     c84:	33 27       	eor	r19, r19
     c86:	a0 0d       	add	r26, r0
     c88:	61 1d       	adc	r22, r1
     c8a:	23 1f       	adc	r18, r19
     c8c:	84 9f       	mul	r24, r20
     c8e:	60 0d       	add	r22, r0
     c90:	21 1d       	adc	r18, r1
     c92:	82 2f       	mov	r24, r18
     c94:	76 2f       	mov	r23, r22
     c96:	6a 2f       	mov	r22, r26
     c98:	11 24       	eor	r1, r1
     c9a:	9f 57       	subi	r25, 0x7F	; 127
     c9c:	50 40       	sbci	r21, 0x00	; 0
     c9e:	8a f0       	brmi	.+34     	; 0xcc2 <__mulsf3_pse+0x84>
     ca0:	e1 f0       	breq	.+56     	; 0xcda <__mulsf3_pse+0x9c>
     ca2:	88 23       	and	r24, r24
     ca4:	4a f0       	brmi	.+18     	; 0xcb8 <__mulsf3_pse+0x7a>
     ca6:	ee 0f       	add	r30, r30
     ca8:	ff 1f       	adc	r31, r31
     caa:	bb 1f       	adc	r27, r27
     cac:	66 1f       	adc	r22, r22
     cae:	77 1f       	adc	r23, r23
     cb0:	88 1f       	adc	r24, r24
     cb2:	91 50       	subi	r25, 0x01	; 1
     cb4:	50 40       	sbci	r21, 0x00	; 0
     cb6:	a9 f7       	brne	.-22     	; 0xca2 <__mulsf3_pse+0x64>
     cb8:	9e 3f       	cpi	r25, 0xFE	; 254
     cba:	51 05       	cpc	r21, r1
     cbc:	70 f0       	brcs	.+28     	; 0xcda <__mulsf3_pse+0x9c>
     cbe:	5c cf       	rjmp	.-328    	; 0xb78 <__fp_inf>
     cc0:	a6 cf       	rjmp	.-180    	; 0xc0e <__fp_szero>
     cc2:	5f 3f       	cpi	r21, 0xFF	; 255
     cc4:	ec f3       	brlt	.-6      	; 0xcc0 <__mulsf3_pse+0x82>
     cc6:	98 3e       	cpi	r25, 0xE8	; 232
     cc8:	dc f3       	brlt	.-10     	; 0xcc0 <__mulsf3_pse+0x82>
     cca:	86 95       	lsr	r24
     ccc:	77 95       	ror	r23
     cce:	67 95       	ror	r22
     cd0:	b7 95       	ror	r27
     cd2:	f7 95       	ror	r31
     cd4:	e7 95       	ror	r30
     cd6:	9f 5f       	subi	r25, 0xFF	; 255
     cd8:	c1 f7       	brne	.-16     	; 0xcca <__mulsf3_pse+0x8c>
     cda:	fe 2b       	or	r31, r30
     cdc:	88 0f       	add	r24, r24
     cde:	91 1d       	adc	r25, r1
     ce0:	96 95       	lsr	r25
     ce2:	87 95       	ror	r24
     ce4:	97 f9       	bld	r25, 7
     ce6:	08 95       	ret

00000ce8 <dtostrf>:
     ce8:	ef 92       	push	r14
     cea:	0f 93       	push	r16
     cec:	1f 93       	push	r17
     cee:	cf 93       	push	r28
     cf0:	32 2f       	mov	r19, r18
     cf2:	c0 2f       	mov	r28, r16
     cf4:	47 ff       	sbrs	r20, 7
     cf6:	02 c0       	rjmp	.+4      	; 0xcfc <dtostrf+0x14>
     cf8:	a4 e1       	ldi	r26, 0x14	; 20
     cfa:	01 c0       	rjmp	.+2      	; 0xcfe <dtostrf+0x16>
     cfc:	a4 e0       	ldi	r26, 0x04	; 4
     cfe:	e4 2f       	mov	r30, r20
     d00:	ff 27       	eor	r31, r31
     d02:	e7 fd       	sbrc	r30, 7
     d04:	f0 95       	com	r31
     d06:	f7 ff       	sbrs	r31, 7
     d08:	03 c0       	rjmp	.+6      	; 0xd10 <dtostrf+0x28>
     d0a:	f0 95       	com	r31
     d0c:	e1 95       	neg	r30
     d0e:	ff 4f       	sbci	r31, 0xFF	; 255
     d10:	4c 2f       	mov	r20, r28
     d12:	51 2f       	mov	r21, r17
     d14:	2e 2f       	mov	r18, r30
     d16:	03 2f       	mov	r16, r19
     d18:	ea 2e       	mov	r14, r26
     d1a:	0e 94 b7 06 	call	0xd6e	; 0xd6e <dtoa_prf>
     d1e:	8c 2f       	mov	r24, r28
     d20:	91 2f       	mov	r25, r17
     d22:	cf 91       	pop	r28
     d24:	1f 91       	pop	r17
     d26:	0f 91       	pop	r16
     d28:	ef 90       	pop	r14
     d2a:	08 95       	ret

00000d2c <itoa>:
     d2c:	fb 01       	movw	r30, r22
     d2e:	9f 01       	movw	r18, r30
     d30:	e8 94       	clt
     d32:	42 30       	cpi	r20, 0x02	; 2
     d34:	c4 f0       	brlt	.+48     	; 0xd66 <itoa+0x3a>
     d36:	45 32       	cpi	r20, 0x25	; 37
     d38:	b4 f4       	brge	.+44     	; 0xd66 <itoa+0x3a>
     d3a:	4a 30       	cpi	r20, 0x0A	; 10
     d3c:	29 f4       	brne	.+10     	; 0xd48 <itoa+0x1c>
     d3e:	97 fb       	bst	r25, 7
     d40:	1e f4       	brtc	.+6      	; 0xd48 <itoa+0x1c>
     d42:	90 95       	com	r25
     d44:	81 95       	neg	r24
     d46:	9f 4f       	sbci	r25, 0xFF	; 255
     d48:	64 2f       	mov	r22, r20
     d4a:	77 27       	eor	r23, r23
     d4c:	0e 94 f7 08 	call	0x11ee	; 0x11ee <__udivmodhi4>
     d50:	80 5d       	subi	r24, 0xD0	; 208
     d52:	8a 33       	cpi	r24, 0x3A	; 58
     d54:	0c f0       	brlt	.+2      	; 0xd58 <itoa+0x2c>
     d56:	89 5d       	subi	r24, 0xD9	; 217
     d58:	81 93       	st	Z+, r24
     d5a:	cb 01       	movw	r24, r22
     d5c:	00 97       	sbiw	r24, 0x00	; 0
     d5e:	a1 f7       	brne	.-24     	; 0xd48 <itoa+0x1c>
     d60:	16 f4       	brtc	.+4      	; 0xd66 <itoa+0x3a>
     d62:	5d e2       	ldi	r21, 0x2D	; 45
     d64:	51 93       	st	Z+, r21
     d66:	10 82       	st	Z, r1
     d68:	c9 01       	movw	r24, r18
     d6a:	0c 94 e7 08 	jmp	0x11ce	; 0x11ce <strrev>

00000d6e <dtoa_prf>:
     d6e:	a9 e0       	ldi	r26, 0x09	; 9
     d70:	b0 e0       	ldi	r27, 0x00	; 0
     d72:	ed eb       	ldi	r30, 0xBD	; 189
     d74:	f6 e0       	ldi	r31, 0x06	; 6
     d76:	0c 94 0f 09 	jmp	0x121e	; 0x121e <__prologue_saves__+0x8>
     d7a:	6a 01       	movw	r12, r20
     d7c:	12 2f       	mov	r17, r18
     d7e:	f0 2e       	mov	r15, r16
     d80:	2b e3       	ldi	r18, 0x3B	; 59
     d82:	20 17       	cp	r18, r16
     d84:	18 f0       	brcs	.+6      	; 0xd8c <dtoa_prf+0x1e>
     d86:	b0 2e       	mov	r11, r16
     d88:	b3 94       	inc	r11
     d8a:	02 c0       	rjmp	.+4      	; 0xd90 <dtoa_prf+0x22>
     d8c:	3c e3       	ldi	r19, 0x3C	; 60
     d8e:	b3 2e       	mov	r11, r19
     d90:	ae 01       	movw	r20, r28
     d92:	4f 5f       	subi	r20, 0xFF	; 255
     d94:	5f 4f       	sbci	r21, 0xFF	; 255
     d96:	27 e0       	ldi	r18, 0x07	; 7
     d98:	0b 2d       	mov	r16, r11
     d9a:	0e 94 0f 08 	call	0x101e	; 0x101e <__ftoa_engine>
     d9e:	bc 01       	movw	r22, r24
     da0:	a9 81       	ldd	r26, Y+1	; 0x01
     da2:	b0 e0       	ldi	r27, 0x00	; 0
     da4:	cd 01       	movw	r24, r26
     da6:	89 70       	andi	r24, 0x09	; 9
     da8:	90 70       	andi	r25, 0x00	; 0
     daa:	81 30       	cpi	r24, 0x01	; 1
     dac:	91 05       	cpc	r25, r1
     dae:	31 f0       	breq	.+12     	; 0xdbc <dtoa_prf+0x4e>
     db0:	e1 fc       	sbrc	r14, 1
     db2:	06 c0       	rjmp	.+12     	; 0xdc0 <dtoa_prf+0x52>
     db4:	e0 fe       	sbrs	r14, 0
     db6:	06 c0       	rjmp	.+12     	; 0xdc4 <dtoa_prf+0x56>
     db8:	40 e2       	ldi	r20, 0x20	; 32
     dba:	05 c0       	rjmp	.+10     	; 0xdc6 <dtoa_prf+0x58>
     dbc:	4d e2       	ldi	r20, 0x2D	; 45
     dbe:	03 c0       	rjmp	.+6      	; 0xdc6 <dtoa_prf+0x58>
     dc0:	4b e2       	ldi	r20, 0x2B	; 43
     dc2:	01 c0       	rjmp	.+2      	; 0xdc6 <dtoa_prf+0x58>
     dc4:	40 e0       	ldi	r20, 0x00	; 0
     dc6:	a3 ff       	sbrs	r26, 3
     dc8:	36 c0       	rjmp	.+108    	; 0xe36 <dtoa_prf+0xc8>
     dca:	44 23       	and	r20, r20
     dcc:	11 f0       	breq	.+4      	; 0xdd2 <dtoa_prf+0x64>
     dce:	84 e0       	ldi	r24, 0x04	; 4
     dd0:	01 c0       	rjmp	.+2      	; 0xdd4 <dtoa_prf+0x66>
     dd2:	83 e0       	ldi	r24, 0x03	; 3
     dd4:	81 17       	cp	r24, r17
     dd6:	10 f4       	brcc	.+4      	; 0xddc <dtoa_prf+0x6e>
     dd8:	18 1b       	sub	r17, r24
     dda:	01 c0       	rjmp	.+2      	; 0xdde <dtoa_prf+0x70>
     ddc:	10 e0       	ldi	r17, 0x00	; 0
     dde:	e4 fc       	sbrc	r14, 4
     de0:	0b c0       	rjmp	.+22     	; 0xdf8 <dtoa_prf+0x8a>
     de2:	91 2f       	mov	r25, r17
     de4:	f6 01       	movw	r30, r12
     de6:	80 e2       	ldi	r24, 0x20	; 32
     de8:	02 c0       	rjmp	.+4      	; 0xdee <dtoa_prf+0x80>
     dea:	81 93       	st	Z+, r24
     dec:	91 50       	subi	r25, 0x01	; 1
     dee:	99 23       	and	r25, r25
     df0:	e1 f7       	brne	.-8      	; 0xdea <dtoa_prf+0x7c>
     df2:	c1 0e       	add	r12, r17
     df4:	d1 1c       	adc	r13, r1
     df6:	10 e0       	ldi	r17, 0x00	; 0
     df8:	44 23       	and	r20, r20
     dfa:	19 f0       	breq	.+6      	; 0xe02 <dtoa_prf+0x94>
     dfc:	f6 01       	movw	r30, r12
     dfe:	41 93       	st	Z+, r20
     e00:	6f 01       	movw	r12, r30
     e02:	e2 fe       	sbrs	r14, 2
     e04:	05 c0       	rjmp	.+10     	; 0xe10 <dtoa_prf+0xa2>
     e06:	8e e4       	ldi	r24, 0x4E	; 78
     e08:	f6 01       	movw	r30, r12
     e0a:	80 83       	st	Z, r24
     e0c:	91 e4       	ldi	r25, 0x41	; 65
     e0e:	04 c0       	rjmp	.+8      	; 0xe18 <dtoa_prf+0xaa>
     e10:	8e e6       	ldi	r24, 0x6E	; 110
     e12:	f6 01       	movw	r30, r12
     e14:	80 83       	st	Z, r24
     e16:	91 e6       	ldi	r25, 0x61	; 97
     e18:	91 83       	std	Z+1, r25	; 0x01
     e1a:	82 83       	std	Z+2, r24	; 0x02
     e1c:	83 e0       	ldi	r24, 0x03	; 3
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	c8 0e       	add	r12, r24
     e22:	d9 1e       	adc	r13, r25
     e24:	81 2f       	mov	r24, r17
     e26:	f6 01       	movw	r30, r12
     e28:	90 e2       	ldi	r25, 0x20	; 32
     e2a:	02 c0       	rjmp	.+4      	; 0xe30 <dtoa_prf+0xc2>
     e2c:	91 93       	st	Z+, r25
     e2e:	81 50       	subi	r24, 0x01	; 1
     e30:	88 23       	and	r24, r24
     e32:	e1 f7       	brne	.-8      	; 0xe2c <dtoa_prf+0xbe>
     e34:	3a c0       	rjmp	.+116    	; 0xeaa <dtoa_prf+0x13c>
     e36:	a2 ff       	sbrs	r26, 2
     e38:	3f c0       	rjmp	.+126    	; 0xeb8 <dtoa_prf+0x14a>
     e3a:	44 23       	and	r20, r20
     e3c:	11 f0       	breq	.+4      	; 0xe42 <dtoa_prf+0xd4>
     e3e:	84 e0       	ldi	r24, 0x04	; 4
     e40:	01 c0       	rjmp	.+2      	; 0xe44 <dtoa_prf+0xd6>
     e42:	83 e0       	ldi	r24, 0x03	; 3
     e44:	81 17       	cp	r24, r17
     e46:	10 f4       	brcc	.+4      	; 0xe4c <dtoa_prf+0xde>
     e48:	18 1b       	sub	r17, r24
     e4a:	01 c0       	rjmp	.+2      	; 0xe4e <dtoa_prf+0xe0>
     e4c:	10 e0       	ldi	r17, 0x00	; 0
     e4e:	e4 fc       	sbrc	r14, 4
     e50:	0b c0       	rjmp	.+22     	; 0xe68 <dtoa_prf+0xfa>
     e52:	91 2f       	mov	r25, r17
     e54:	f6 01       	movw	r30, r12
     e56:	80 e2       	ldi	r24, 0x20	; 32
     e58:	02 c0       	rjmp	.+4      	; 0xe5e <dtoa_prf+0xf0>
     e5a:	81 93       	st	Z+, r24
     e5c:	91 50       	subi	r25, 0x01	; 1
     e5e:	99 23       	and	r25, r25
     e60:	e1 f7       	brne	.-8      	; 0xe5a <dtoa_prf+0xec>
     e62:	c1 0e       	add	r12, r17
     e64:	d1 1c       	adc	r13, r1
     e66:	10 e0       	ldi	r17, 0x00	; 0
     e68:	44 23       	and	r20, r20
     e6a:	19 f0       	breq	.+6      	; 0xe72 <dtoa_prf+0x104>
     e6c:	f6 01       	movw	r30, r12
     e6e:	41 93       	st	Z+, r20
     e70:	6f 01       	movw	r12, r30
     e72:	e2 fe       	sbrs	r14, 2
     e74:	07 c0       	rjmp	.+14     	; 0xe84 <dtoa_prf+0x116>
     e76:	89 e4       	ldi	r24, 0x49	; 73
     e78:	f6 01       	movw	r30, r12
     e7a:	80 83       	st	Z, r24
     e7c:	8e e4       	ldi	r24, 0x4E	; 78
     e7e:	81 83       	std	Z+1, r24	; 0x01
     e80:	86 e4       	ldi	r24, 0x46	; 70
     e82:	06 c0       	rjmp	.+12     	; 0xe90 <dtoa_prf+0x122>
     e84:	89 e6       	ldi	r24, 0x69	; 105
     e86:	f6 01       	movw	r30, r12
     e88:	80 83       	st	Z, r24
     e8a:	8e e6       	ldi	r24, 0x6E	; 110
     e8c:	81 83       	std	Z+1, r24	; 0x01
     e8e:	86 e6       	ldi	r24, 0x66	; 102
     e90:	82 83       	std	Z+2, r24	; 0x02
     e92:	83 e0       	ldi	r24, 0x03	; 3
     e94:	90 e0       	ldi	r25, 0x00	; 0
     e96:	c8 0e       	add	r12, r24
     e98:	d9 1e       	adc	r13, r25
     e9a:	81 2f       	mov	r24, r17
     e9c:	f6 01       	movw	r30, r12
     e9e:	90 e2       	ldi	r25, 0x20	; 32
     ea0:	02 c0       	rjmp	.+4      	; 0xea6 <dtoa_prf+0x138>
     ea2:	91 93       	st	Z+, r25
     ea4:	81 50       	subi	r24, 0x01	; 1
     ea6:	88 23       	and	r24, r24
     ea8:	e1 f7       	brne	.-8      	; 0xea2 <dtoa_prf+0x134>
     eaa:	c1 0e       	add	r12, r17
     eac:	d1 1c       	adc	r13, r1
     eae:	f6 01       	movw	r30, r12
     eb0:	10 82       	st	Z, r1
     eb2:	8e ef       	ldi	r24, 0xFE	; 254
     eb4:	9f ef       	ldi	r25, 0xFF	; 255
     eb6:	af c0       	rjmp	.+350    	; 0x1016 <dtoa_prf+0x2a8>
     eb8:	21 e0       	ldi	r18, 0x01	; 1
     eba:	30 e0       	ldi	r19, 0x00	; 0
     ebc:	44 23       	and	r20, r20
     ebe:	11 f4       	brne	.+4      	; 0xec4 <dtoa_prf+0x156>
     ec0:	20 e0       	ldi	r18, 0x00	; 0
     ec2:	30 e0       	ldi	r19, 0x00	; 0
     ec4:	16 16       	cp	r1, r22
     ec6:	17 06       	cpc	r1, r23
     ec8:	1c f4       	brge	.+6      	; 0xed0 <dtoa_prf+0x162>
     eca:	cb 01       	movw	r24, r22
     ecc:	01 96       	adiw	r24, 0x01	; 1
     ece:	02 c0       	rjmp	.+4      	; 0xed4 <dtoa_prf+0x166>
     ed0:	81 e0       	ldi	r24, 0x01	; 1
     ed2:	90 e0       	ldi	r25, 0x00	; 0
     ed4:	28 0f       	add	r18, r24
     ed6:	39 1f       	adc	r19, r25
     ed8:	ff 20       	and	r15, r15
     eda:	21 f0       	breq	.+8      	; 0xee4 <dtoa_prf+0x176>
     edc:	8f 2d       	mov	r24, r15
     ede:	90 e0       	ldi	r25, 0x00	; 0
     ee0:	01 96       	adiw	r24, 0x01	; 1
     ee2:	02 c0       	rjmp	.+4      	; 0xee8 <dtoa_prf+0x17a>
     ee4:	80 e0       	ldi	r24, 0x00	; 0
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	82 0f       	add	r24, r18
     eea:	93 1f       	adc	r25, r19
     eec:	21 2f       	mov	r18, r17
     eee:	30 e0       	ldi	r19, 0x00	; 0
     ef0:	82 17       	cp	r24, r18
     ef2:	93 07       	cpc	r25, r19
     ef4:	1c f4       	brge	.+6      	; 0xefc <dtoa_prf+0x18e>
     ef6:	51 2f       	mov	r21, r17
     ef8:	58 1b       	sub	r21, r24
     efa:	01 c0       	rjmp	.+2      	; 0xefe <dtoa_prf+0x190>
     efc:	50 e0       	ldi	r21, 0x00	; 0
     efe:	8e 2d       	mov	r24, r14
     f00:	90 e0       	ldi	r25, 0x00	; 0
     f02:	9c 01       	movw	r18, r24
     f04:	20 71       	andi	r18, 0x10	; 16
     f06:	30 70       	andi	r19, 0x00	; 0
     f08:	e4 fc       	sbrc	r14, 4
     f0a:	0d c0       	rjmp	.+26     	; 0xf26 <dtoa_prf+0x1b8>
     f0c:	e3 fc       	sbrc	r14, 3
     f0e:	0b c0       	rjmp	.+22     	; 0xf26 <dtoa_prf+0x1b8>
     f10:	85 2f       	mov	r24, r21
     f12:	f6 01       	movw	r30, r12
     f14:	90 e2       	ldi	r25, 0x20	; 32
     f16:	02 c0       	rjmp	.+4      	; 0xf1c <dtoa_prf+0x1ae>
     f18:	91 93       	st	Z+, r25
     f1a:	81 50       	subi	r24, 0x01	; 1
     f1c:	88 23       	and	r24, r24
     f1e:	e1 f7       	brne	.-8      	; 0xf18 <dtoa_prf+0x1aa>
     f20:	c5 0e       	add	r12, r21
     f22:	d1 1c       	adc	r13, r1
     f24:	50 e0       	ldi	r21, 0x00	; 0
     f26:	44 23       	and	r20, r20
     f28:	19 f0       	breq	.+6      	; 0xf30 <dtoa_prf+0x1c2>
     f2a:	f6 01       	movw	r30, r12
     f2c:	41 93       	st	Z+, r20
     f2e:	6f 01       	movw	r12, r30
     f30:	21 15       	cp	r18, r1
     f32:	31 05       	cpc	r19, r1
     f34:	59 f4       	brne	.+22     	; 0xf4c <dtoa_prf+0x1de>
     f36:	85 2f       	mov	r24, r21
     f38:	f6 01       	movw	r30, r12
     f3a:	90 e3       	ldi	r25, 0x30	; 48
     f3c:	02 c0       	rjmp	.+4      	; 0xf42 <dtoa_prf+0x1d4>
     f3e:	91 93       	st	Z+, r25
     f40:	81 50       	subi	r24, 0x01	; 1
     f42:	88 23       	and	r24, r24
     f44:	e1 f7       	brne	.-8      	; 0xf3e <dtoa_prf+0x1d0>
     f46:	c5 0e       	add	r12, r21
     f48:	d1 1c       	adc	r13, r1
     f4a:	50 e0       	ldi	r21, 0x00	; 0
     f4c:	b6 0e       	add	r11, r22
     f4e:	4a 81       	ldd	r20, Y+2	; 0x02
     f50:	20 e1       	ldi	r18, 0x10	; 16
     f52:	62 2e       	mov	r6, r18
     f54:	71 2c       	mov	r7, r1
     f56:	6a 22       	and	r6, r26
     f58:	7b 22       	and	r7, r27
     f5a:	a4 ff       	sbrs	r26, 4
     f5c:	03 c0       	rjmp	.+6      	; 0xf64 <dtoa_prf+0x1f6>
     f5e:	41 33       	cpi	r20, 0x31	; 49
     f60:	09 f4       	brne	.+2      	; 0xf64 <dtoa_prf+0x1f6>
     f62:	ba 94       	dec	r11
     f64:	1b 14       	cp	r1, r11
     f66:	2c f4       	brge	.+10     	; 0xf72 <dtoa_prf+0x204>
     f68:	8b 2d       	mov	r24, r11
     f6a:	89 30       	cpi	r24, 0x09	; 9
     f6c:	18 f0       	brcs	.+6      	; 0xf74 <dtoa_prf+0x206>
     f6e:	88 e0       	ldi	r24, 0x08	; 8
     f70:	01 c0       	rjmp	.+2      	; 0xf74 <dtoa_prf+0x206>
     f72:	81 e0       	ldi	r24, 0x01	; 1
     f74:	9b 01       	movw	r18, r22
     f76:	77 ff       	sbrs	r23, 7
     f78:	02 c0       	rjmp	.+4      	; 0xf7e <dtoa_prf+0x210>
     f7a:	20 e0       	ldi	r18, 0x00	; 0
     f7c:	30 e0       	ldi	r19, 0x00	; 0
     f7e:	a0 e0       	ldi	r26, 0x00	; 0
     f80:	b0 e0       	ldi	r27, 0x00	; 0
     f82:	9e e2       	ldi	r25, 0x2E	; 46
     f84:	e9 2e       	mov	r14, r25
     f86:	4b 01       	movw	r8, r22
     f88:	88 1a       	sub	r8, r24
     f8a:	91 08       	sbc	r9, r1
     f8c:	cb 01       	movw	r24, r22
     f8e:	82 1b       	sub	r24, r18
     f90:	93 0b       	sbc	r25, r19
     f92:	8e 01       	movw	r16, r28
     f94:	0f 5f       	subi	r16, 0xFF	; 255
     f96:	1f 4f       	sbci	r17, 0xFF	; 255
     f98:	08 0f       	add	r16, r24
     f9a:	19 1f       	adc	r17, r25
     f9c:	8f 2d       	mov	r24, r15
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	aa 24       	eor	r10, r10
     fa2:	bb 24       	eor	r11, r11
     fa4:	a8 1a       	sub	r10, r24
     fa6:	b9 0a       	sbc	r11, r25
     fa8:	ff ef       	ldi	r31, 0xFF	; 255
     faa:	2f 3f       	cpi	r18, 0xFF	; 255
     fac:	3f 07       	cpc	r19, r31
     fae:	19 f4       	brne	.+6      	; 0xfb6 <dtoa_prf+0x248>
     fb0:	f6 01       	movw	r30, r12
     fb2:	e1 92       	st	Z+, r14
     fb4:	6f 01       	movw	r12, r30
     fb6:	62 17       	cp	r22, r18
     fb8:	73 07       	cpc	r23, r19
     fba:	44 f0       	brlt	.+16     	; 0xfcc <dtoa_prf+0x25e>
     fbc:	82 16       	cp	r8, r18
     fbe:	93 06       	cpc	r9, r19
     fc0:	2c f4       	brge	.+10     	; 0xfcc <dtoa_prf+0x25e>
     fc2:	f8 01       	movw	r30, r16
     fc4:	ea 0f       	add	r30, r26
     fc6:	fb 1f       	adc	r31, r27
     fc8:	81 81       	ldd	r24, Z+1	; 0x01
     fca:	01 c0       	rjmp	.+2      	; 0xfce <dtoa_prf+0x260>
     fcc:	80 e3       	ldi	r24, 0x30	; 48
     fce:	21 50       	subi	r18, 0x01	; 1
     fd0:	30 40       	sbci	r19, 0x00	; 0
     fd2:	11 96       	adiw	r26, 0x01	; 1
     fd4:	2a 15       	cp	r18, r10
     fd6:	3b 05       	cpc	r19, r11
     fd8:	24 f0       	brlt	.+8      	; 0xfe2 <dtoa_prf+0x274>
     fda:	f6 01       	movw	r30, r12
     fdc:	81 93       	st	Z+, r24
     fde:	6f 01       	movw	r12, r30
     fe0:	e3 cf       	rjmp	.-58     	; 0xfa8 <dtoa_prf+0x23a>
     fe2:	26 17       	cp	r18, r22
     fe4:	37 07       	cpc	r19, r23
     fe6:	41 f4       	brne	.+16     	; 0xff8 <dtoa_prf+0x28a>
     fe8:	46 33       	cpi	r20, 0x36	; 54
     fea:	28 f4       	brcc	.+10     	; 0xff6 <dtoa_prf+0x288>
     fec:	45 33       	cpi	r20, 0x35	; 53
     fee:	21 f4       	brne	.+8      	; 0xff8 <dtoa_prf+0x28a>
     ff0:	61 14       	cp	r6, r1
     ff2:	71 04       	cpc	r7, r1
     ff4:	09 f4       	brne	.+2      	; 0xff8 <dtoa_prf+0x28a>
     ff6:	81 e3       	ldi	r24, 0x31	; 49
     ff8:	f6 01       	movw	r30, r12
     ffa:	81 93       	st	Z+, r24
     ffc:	85 2f       	mov	r24, r21
     ffe:	df 01       	movw	r26, r30
    1000:	90 e2       	ldi	r25, 0x20	; 32
    1002:	02 c0       	rjmp	.+4      	; 0x1008 <dtoa_prf+0x29a>
    1004:	9d 93       	st	X+, r25
    1006:	81 50       	subi	r24, 0x01	; 1
    1008:	88 23       	and	r24, r24
    100a:	e1 f7       	brne	.-8      	; 0x1004 <dtoa_prf+0x296>
    100c:	e5 0f       	add	r30, r21
    100e:	f1 1d       	adc	r31, r1
    1010:	10 82       	st	Z, r1
    1012:	80 e0       	ldi	r24, 0x00	; 0
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	29 96       	adiw	r28, 0x09	; 9
    1018:	ee e0       	ldi	r30, 0x0E	; 14
    101a:	0c 94 2b 09 	jmp	0x1256	; 0x1256 <__epilogue_restores__+0x8>

0000101e <__ftoa_engine>:
    101e:	28 30       	cpi	r18, 0x08	; 8
    1020:	08 f0       	brcs	.+2      	; 0x1024 <__ftoa_engine+0x6>
    1022:	27 e0       	ldi	r18, 0x07	; 7
    1024:	33 27       	eor	r19, r19
    1026:	da 01       	movw	r26, r20
    1028:	99 0f       	add	r25, r25
    102a:	31 1d       	adc	r19, r1
    102c:	87 fd       	sbrc	r24, 7
    102e:	91 60       	ori	r25, 0x01	; 1
    1030:	00 96       	adiw	r24, 0x00	; 0
    1032:	61 05       	cpc	r22, r1
    1034:	71 05       	cpc	r23, r1
    1036:	39 f4       	brne	.+14     	; 0x1046 <__ftoa_engine+0x28>
    1038:	32 60       	ori	r19, 0x02	; 2
    103a:	2e 5f       	subi	r18, 0xFE	; 254
    103c:	3d 93       	st	X+, r19
    103e:	30 e3       	ldi	r19, 0x30	; 48
    1040:	2a 95       	dec	r18
    1042:	e1 f7       	brne	.-8      	; 0x103c <__ftoa_engine+0x1e>
    1044:	08 95       	ret
    1046:	9f 3f       	cpi	r25, 0xFF	; 255
    1048:	30 f0       	brcs	.+12     	; 0x1056 <__ftoa_engine+0x38>
    104a:	80 38       	cpi	r24, 0x80	; 128
    104c:	71 05       	cpc	r23, r1
    104e:	61 05       	cpc	r22, r1
    1050:	09 f0       	breq	.+2      	; 0x1054 <__ftoa_engine+0x36>
    1052:	3c 5f       	subi	r19, 0xFC	; 252
    1054:	3c 5f       	subi	r19, 0xFC	; 252
    1056:	3d 93       	st	X+, r19
    1058:	91 30       	cpi	r25, 0x01	; 1
    105a:	08 f0       	brcs	.+2      	; 0x105e <__ftoa_engine+0x40>
    105c:	80 68       	ori	r24, 0x80	; 128
    105e:	91 1d       	adc	r25, r1
    1060:	df 93       	push	r29
    1062:	cf 93       	push	r28
    1064:	1f 93       	push	r17
    1066:	0f 93       	push	r16
    1068:	ff 92       	push	r15
    106a:	ef 92       	push	r14
    106c:	19 2f       	mov	r17, r25
    106e:	98 7f       	andi	r25, 0xF8	; 248
    1070:	96 95       	lsr	r25
    1072:	e9 2f       	mov	r30, r25
    1074:	96 95       	lsr	r25
    1076:	96 95       	lsr	r25
    1078:	e9 0f       	add	r30, r25
    107a:	ff 27       	eor	r31, r31
    107c:	e2 55       	subi	r30, 0x52	; 82
    107e:	ff 4f       	sbci	r31, 0xFF	; 255
    1080:	99 27       	eor	r25, r25
    1082:	33 27       	eor	r19, r19
    1084:	ee 24       	eor	r14, r14
    1086:	ff 24       	eor	r15, r15
    1088:	a7 01       	movw	r20, r14
    108a:	e7 01       	movw	r28, r14
    108c:	05 90       	lpm	r0, Z+
    108e:	08 94       	sec
    1090:	07 94       	ror	r0
    1092:	28 f4       	brcc	.+10     	; 0x109e <__ftoa_engine+0x80>
    1094:	36 0f       	add	r19, r22
    1096:	e7 1e       	adc	r14, r23
    1098:	f8 1e       	adc	r15, r24
    109a:	49 1f       	adc	r20, r25
    109c:	51 1d       	adc	r21, r1
    109e:	66 0f       	add	r22, r22
    10a0:	77 1f       	adc	r23, r23
    10a2:	88 1f       	adc	r24, r24
    10a4:	99 1f       	adc	r25, r25
    10a6:	06 94       	lsr	r0
    10a8:	a1 f7       	brne	.-24     	; 0x1092 <__ftoa_engine+0x74>
    10aa:	05 90       	lpm	r0, Z+
    10ac:	07 94       	ror	r0
    10ae:	28 f4       	brcc	.+10     	; 0x10ba <__ftoa_engine+0x9c>
    10b0:	e7 0e       	add	r14, r23
    10b2:	f8 1e       	adc	r15, r24
    10b4:	49 1f       	adc	r20, r25
    10b6:	56 1f       	adc	r21, r22
    10b8:	c1 1d       	adc	r28, r1
    10ba:	77 0f       	add	r23, r23
    10bc:	88 1f       	adc	r24, r24
    10be:	99 1f       	adc	r25, r25
    10c0:	66 1f       	adc	r22, r22
    10c2:	06 94       	lsr	r0
    10c4:	a1 f7       	brne	.-24     	; 0x10ae <__ftoa_engine+0x90>
    10c6:	05 90       	lpm	r0, Z+
    10c8:	07 94       	ror	r0
    10ca:	28 f4       	brcc	.+10     	; 0x10d6 <__ftoa_engine+0xb8>
    10cc:	f8 0e       	add	r15, r24
    10ce:	49 1f       	adc	r20, r25
    10d0:	56 1f       	adc	r21, r22
    10d2:	c7 1f       	adc	r28, r23
    10d4:	d1 1d       	adc	r29, r1
    10d6:	88 0f       	add	r24, r24
    10d8:	99 1f       	adc	r25, r25
    10da:	66 1f       	adc	r22, r22
    10dc:	77 1f       	adc	r23, r23
    10de:	06 94       	lsr	r0
    10e0:	a1 f7       	brne	.-24     	; 0x10ca <__ftoa_engine+0xac>
    10e2:	05 90       	lpm	r0, Z+
    10e4:	07 94       	ror	r0
    10e6:	20 f4       	brcc	.+8      	; 0x10f0 <__ftoa_engine+0xd2>
    10e8:	49 0f       	add	r20, r25
    10ea:	56 1f       	adc	r21, r22
    10ec:	c7 1f       	adc	r28, r23
    10ee:	d8 1f       	adc	r29, r24
    10f0:	99 0f       	add	r25, r25
    10f2:	66 1f       	adc	r22, r22
    10f4:	77 1f       	adc	r23, r23
    10f6:	88 1f       	adc	r24, r24
    10f8:	06 94       	lsr	r0
    10fa:	a9 f7       	brne	.-22     	; 0x10e6 <__ftoa_engine+0xc8>
    10fc:	84 91       	lpm	r24, Z
    10fe:	10 95       	com	r17
    1100:	17 70       	andi	r17, 0x07	; 7
    1102:	41 f0       	breq	.+16     	; 0x1114 <__ftoa_engine+0xf6>
    1104:	d6 95       	lsr	r29
    1106:	c7 95       	ror	r28
    1108:	57 95       	ror	r21
    110a:	47 95       	ror	r20
    110c:	f7 94       	ror	r15
    110e:	e7 94       	ror	r14
    1110:	1a 95       	dec	r17
    1112:	c1 f7       	brne	.-16     	; 0x1104 <__ftoa_engine+0xe6>
    1114:	e4 e5       	ldi	r30, 0x54	; 84
    1116:	f0 e0       	ldi	r31, 0x00	; 0
    1118:	68 94       	set
    111a:	15 90       	lpm	r1, Z+
    111c:	15 91       	lpm	r17, Z+
    111e:	35 91       	lpm	r19, Z+
    1120:	65 91       	lpm	r22, Z+
    1122:	95 91       	lpm	r25, Z+
    1124:	05 90       	lpm	r0, Z+
    1126:	7f e2       	ldi	r23, 0x2F	; 47
    1128:	73 95       	inc	r23
    112a:	e1 18       	sub	r14, r1
    112c:	f1 0a       	sbc	r15, r17
    112e:	43 0b       	sbc	r20, r19
    1130:	56 0b       	sbc	r21, r22
    1132:	c9 0b       	sbc	r28, r25
    1134:	d0 09       	sbc	r29, r0
    1136:	c0 f7       	brcc	.-16     	; 0x1128 <__ftoa_engine+0x10a>
    1138:	e1 0c       	add	r14, r1
    113a:	f1 1e       	adc	r15, r17
    113c:	43 1f       	adc	r20, r19
    113e:	56 1f       	adc	r21, r22
    1140:	c9 1f       	adc	r28, r25
    1142:	d0 1d       	adc	r29, r0
    1144:	7e f4       	brtc	.+30     	; 0x1164 <__ftoa_engine+0x146>
    1146:	70 33       	cpi	r23, 0x30	; 48
    1148:	11 f4       	brne	.+4      	; 0x114e <__ftoa_engine+0x130>
    114a:	8a 95       	dec	r24
    114c:	e6 cf       	rjmp	.-52     	; 0x111a <__ftoa_engine+0xfc>
    114e:	e8 94       	clt
    1150:	01 50       	subi	r16, 0x01	; 1
    1152:	30 f0       	brcs	.+12     	; 0x1160 <__ftoa_engine+0x142>
    1154:	08 0f       	add	r16, r24
    1156:	0a f4       	brpl	.+2      	; 0x115a <__ftoa_engine+0x13c>
    1158:	00 27       	eor	r16, r16
    115a:	02 17       	cp	r16, r18
    115c:	08 f4       	brcc	.+2      	; 0x1160 <__ftoa_engine+0x142>
    115e:	20 2f       	mov	r18, r16
    1160:	23 95       	inc	r18
    1162:	02 2f       	mov	r16, r18
    1164:	7a 33       	cpi	r23, 0x3A	; 58
    1166:	28 f0       	brcs	.+10     	; 0x1172 <__ftoa_engine+0x154>
    1168:	79 e3       	ldi	r23, 0x39	; 57
    116a:	7d 93       	st	X+, r23
    116c:	2a 95       	dec	r18
    116e:	e9 f7       	brne	.-6      	; 0x116a <__ftoa_engine+0x14c>
    1170:	10 c0       	rjmp	.+32     	; 0x1192 <__ftoa_engine+0x174>
    1172:	7d 93       	st	X+, r23
    1174:	2a 95       	dec	r18
    1176:	89 f6       	brne	.-94     	; 0x111a <__ftoa_engine+0xfc>
    1178:	06 94       	lsr	r0
    117a:	97 95       	ror	r25
    117c:	67 95       	ror	r22
    117e:	37 95       	ror	r19
    1180:	17 95       	ror	r17
    1182:	17 94       	ror	r1
    1184:	e1 18       	sub	r14, r1
    1186:	f1 0a       	sbc	r15, r17
    1188:	43 0b       	sbc	r20, r19
    118a:	56 0b       	sbc	r21, r22
    118c:	c9 0b       	sbc	r28, r25
    118e:	d0 09       	sbc	r29, r0
    1190:	98 f0       	brcs	.+38     	; 0x11b8 <__ftoa_engine+0x19a>
    1192:	23 95       	inc	r18
    1194:	7e 91       	ld	r23, -X
    1196:	73 95       	inc	r23
    1198:	7a 33       	cpi	r23, 0x3A	; 58
    119a:	08 f0       	brcs	.+2      	; 0x119e <__ftoa_engine+0x180>
    119c:	70 e3       	ldi	r23, 0x30	; 48
    119e:	7c 93       	st	X, r23
    11a0:	20 13       	cpse	r18, r16
    11a2:	b8 f7       	brcc	.-18     	; 0x1192 <__ftoa_engine+0x174>
    11a4:	7e 91       	ld	r23, -X
    11a6:	70 61       	ori	r23, 0x10	; 16
    11a8:	7d 93       	st	X+, r23
    11aa:	30 f0       	brcs	.+12     	; 0x11b8 <__ftoa_engine+0x19a>
    11ac:	83 95       	inc	r24
    11ae:	71 e3       	ldi	r23, 0x31	; 49
    11b0:	7d 93       	st	X+, r23
    11b2:	70 e3       	ldi	r23, 0x30	; 48
    11b4:	2a 95       	dec	r18
    11b6:	e1 f7       	brne	.-8      	; 0x11b0 <__ftoa_engine+0x192>
    11b8:	11 24       	eor	r1, r1
    11ba:	ef 90       	pop	r14
    11bc:	ff 90       	pop	r15
    11be:	0f 91       	pop	r16
    11c0:	1f 91       	pop	r17
    11c2:	cf 91       	pop	r28
    11c4:	df 91       	pop	r29
    11c6:	99 27       	eor	r25, r25
    11c8:	87 fd       	sbrc	r24, 7
    11ca:	90 95       	com	r25
    11cc:	08 95       	ret

000011ce <strrev>:
    11ce:	dc 01       	movw	r26, r24
    11d0:	fc 01       	movw	r30, r24
    11d2:	67 2f       	mov	r22, r23
    11d4:	71 91       	ld	r23, Z+
    11d6:	77 23       	and	r23, r23
    11d8:	e1 f7       	brne	.-8      	; 0x11d2 <strrev+0x4>
    11da:	32 97       	sbiw	r30, 0x02	; 2
    11dc:	04 c0       	rjmp	.+8      	; 0x11e6 <strrev+0x18>
    11de:	7c 91       	ld	r23, X
    11e0:	6d 93       	st	X+, r22
    11e2:	70 83       	st	Z, r23
    11e4:	62 91       	ld	r22, -Z
    11e6:	ae 17       	cp	r26, r30
    11e8:	bf 07       	cpc	r27, r31
    11ea:	c8 f3       	brcs	.-14     	; 0x11de <strrev+0x10>
    11ec:	08 95       	ret

000011ee <__udivmodhi4>:
    11ee:	aa 1b       	sub	r26, r26
    11f0:	bb 1b       	sub	r27, r27
    11f2:	51 e1       	ldi	r21, 0x11	; 17
    11f4:	07 c0       	rjmp	.+14     	; 0x1204 <__udivmodhi4_ep>

000011f6 <__udivmodhi4_loop>:
    11f6:	aa 1f       	adc	r26, r26
    11f8:	bb 1f       	adc	r27, r27
    11fa:	a6 17       	cp	r26, r22
    11fc:	b7 07       	cpc	r27, r23
    11fe:	10 f0       	brcs	.+4      	; 0x1204 <__udivmodhi4_ep>
    1200:	a6 1b       	sub	r26, r22
    1202:	b7 0b       	sbc	r27, r23

00001204 <__udivmodhi4_ep>:
    1204:	88 1f       	adc	r24, r24
    1206:	99 1f       	adc	r25, r25
    1208:	5a 95       	dec	r21
    120a:	a9 f7       	brne	.-22     	; 0x11f6 <__udivmodhi4_loop>
    120c:	80 95       	com	r24
    120e:	90 95       	com	r25
    1210:	bc 01       	movw	r22, r24
    1212:	cd 01       	movw	r24, r26
    1214:	08 95       	ret

00001216 <__prologue_saves__>:
    1216:	2f 92       	push	r2
    1218:	3f 92       	push	r3
    121a:	4f 92       	push	r4
    121c:	5f 92       	push	r5
    121e:	6f 92       	push	r6
    1220:	7f 92       	push	r7
    1222:	8f 92       	push	r8
    1224:	9f 92       	push	r9
    1226:	af 92       	push	r10
    1228:	bf 92       	push	r11
    122a:	cf 92       	push	r12
    122c:	df 92       	push	r13
    122e:	ef 92       	push	r14
    1230:	ff 92       	push	r15
    1232:	0f 93       	push	r16
    1234:	1f 93       	push	r17
    1236:	cf 93       	push	r28
    1238:	df 93       	push	r29
    123a:	cd b7       	in	r28, 0x3d	; 61
    123c:	de b7       	in	r29, 0x3e	; 62
    123e:	ca 1b       	sub	r28, r26
    1240:	db 0b       	sbc	r29, r27
    1242:	0f b6       	in	r0, 0x3f	; 63
    1244:	f8 94       	cli
    1246:	de bf       	out	0x3e, r29	; 62
    1248:	0f be       	out	0x3f, r0	; 63
    124a:	cd bf       	out	0x3d, r28	; 61
    124c:	09 94       	ijmp

0000124e <__epilogue_restores__>:
    124e:	2a 88       	ldd	r2, Y+18	; 0x12
    1250:	39 88       	ldd	r3, Y+17	; 0x11
    1252:	48 88       	ldd	r4, Y+16	; 0x10
    1254:	5f 84       	ldd	r5, Y+15	; 0x0f
    1256:	6e 84       	ldd	r6, Y+14	; 0x0e
    1258:	7d 84       	ldd	r7, Y+13	; 0x0d
    125a:	8c 84       	ldd	r8, Y+12	; 0x0c
    125c:	9b 84       	ldd	r9, Y+11	; 0x0b
    125e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1260:	b9 84       	ldd	r11, Y+9	; 0x09
    1262:	c8 84       	ldd	r12, Y+8	; 0x08
    1264:	df 80       	ldd	r13, Y+7	; 0x07
    1266:	ee 80       	ldd	r14, Y+6	; 0x06
    1268:	fd 80       	ldd	r15, Y+5	; 0x05
    126a:	0c 81       	ldd	r16, Y+4	; 0x04
    126c:	1b 81       	ldd	r17, Y+3	; 0x03
    126e:	aa 81       	ldd	r26, Y+2	; 0x02
    1270:	b9 81       	ldd	r27, Y+1	; 0x01
    1272:	ce 0f       	add	r28, r30
    1274:	d1 1d       	adc	r29, r1
    1276:	0f b6       	in	r0, 0x3f	; 63
    1278:	f8 94       	cli
    127a:	de bf       	out	0x3e, r29	; 62
    127c:	0f be       	out	0x3f, r0	; 63
    127e:	cd bf       	out	0x3d, r28	; 61
    1280:	ed 01       	movw	r28, r26
    1282:	08 95       	ret

00001284 <_exit>:
    1284:	f8 94       	cli

00001286 <__stop_program>:
    1286:	ff cf       	rjmp	.-2      	; 0x1286 <__stop_program>
